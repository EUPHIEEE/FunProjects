{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"16NoXmSWrHXxb_d38L5ntlkIwqUV1aEys","authorship_tag":"ABX9TyMRhtVZXIK33CiPPOJchzyK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Read in Dataset "],"metadata":{"id":"CLnOx6CmsSE2"}},{"cell_type":"markdown","source":["dataset from kaggle url below"],"metadata":{"id":"2998bzQXs9Hx"}},{"cell_type":"code","execution_count":49,"metadata":{"id":"LdqDGsPAdUUz","executionInfo":{"status":"ok","timestamp":1669077176380,"user_tz":360,"elapsed":149,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"outputs":[],"source":["import re\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import string\n","import nltk\n","import warnings\n","%matplotlib inline\n","\n","warnings.filterwarnings('ignore', category=DeprecationWarning)\n"]},{"cell_type":"code","source":["# dataset_url = \"kaggle kernels output davidmartngutirrez/bots-accounts-eda -p /path/to/dest\"  \n","\n","\n","from google.colab import drive\n","drive.mount('/content/drive')\n","#!ls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aw7_gDC6bqqp","executionInfo":{"status":"ok","timestamp":1668725485466,"user_tz":300,"elapsed":1132,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"555409e6-7978-4a4f-ce75-aea4f903ecfe"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["%cd /content/drive/My\\ Drive/Colab Notebooks/"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j-9XFMXsjYId","executionInfo":{"status":"ok","timestamp":1669078921055,"user_tz":360,"elapsed":200,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"1a02e89e-ce82-4f72-a30f-9d094f3071ac"},"execution_count":116,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Colab Notebooks\n"]}]},{"cell_type":"code","source":["dataset = pd.read_csv('twitter_human_bots_dataset.csv', parse_dates=['created_at'])  \n","\n","dataset['created_at'] = pd.to_numeric(pd.to_datetime(dataset['created_at']))\n","dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":387},"id":"cl1_Jh4cjgH3","executionInfo":{"status":"ok","timestamp":1669080404760,"user_tz":360,"elapsed":718,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"15c4556e-fbe0-4ba3-bcd0-d593a9849d4b"},"execution_count":153,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0           created_at  default_profile  default_profile_image  \\\n","0           0  1476567131000000000            False                  False   \n","1           1  1478667690000000000            False                  False   \n","2           2  1497677667000000000            False                  False   \n","3           3  1469107945000000000             True                  False   \n","4           4  1326645155000000000            False                  False   \n","\n","                                         description  favourites_count  \\\n","0  Blame @xaiax, Inspired by @MakingInvisible, us...                 4   \n","1  Photographing the American West since 1980. I ...               536   \n","2  Scruffy looking nerf herder and @twitch broadc...              3307   \n","3  Wife.Godmother.Friend.Feline Fanatic! Assistan...              8433   \n","4               Loan coach at @mancity & Aspiring DJ                88   \n","\n","   followers_count  friends_count  geo_enabled                  id lang  \\\n","0             1589              4        False  787405734442958848   en   \n","1              860            880        False  796216118331310080   en   \n","2              172            594         True  875949740503859204   en   \n","3              517            633         True  756119643622735875   en   \n","4           753678            116         True           464781334   en   \n","\n","                  location                      profile_background_image_url  \\\n","0                  unknown  http://abs.twimg.com/images/themes/theme1/bg.png   \n","1           Estados Unidos  http://abs.twimg.com/images/themes/theme1/bg.png   \n","2          Los Angeles, CA  http://abs.twimg.com/images/themes/theme1/bg.png   \n","3           Birmingham, AL                                               NaN   \n","4  England, United Kingdom  http://abs.twimg.com/images/themes/theme1/bg.png   \n","\n","                                   profile_image_url      screen_name  \\\n","0  http://pbs.twimg.com/profile_images/7874121826...  best_in_dumbest   \n","1  http://pbs.twimg.com/profile_images/8023296328...     CJRubinPhoto   \n","2  http://pbs.twimg.com/profile_images/1278890453...         SVGEGENT   \n","3  http://pbs.twimg.com/profile_images/1284884924...    TinkerVHELPK5   \n","4  http://pbs.twimg.com/profile_images/9952566258...    JoleonLescott   \n","\n","   statuses_count  verified  average_tweets_per_day  account_age_days  \\\n","0           11041     False                   7.870              1403   \n","1             252     False                   0.183              1379   \n","2            1001     False                   0.864              1159   \n","3            1324     False                   0.889              1489   \n","4            4202      True                   1.339              3138   \n","\n","  account_type  \n","0          bot  \n","1        human  \n","2        human  \n","3        human  \n","4        human  "],"text/html":["\n","  <div id=\"df-b7e17fb9-f121-40c4-a972-82bb8813d30d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>created_at</th>\n","      <th>default_profile</th>\n","      <th>default_profile_image</th>\n","      <th>description</th>\n","      <th>favourites_count</th>\n","      <th>followers_count</th>\n","      <th>friends_count</th>\n","      <th>geo_enabled</th>\n","      <th>id</th>\n","      <th>lang</th>\n","      <th>location</th>\n","      <th>profile_background_image_url</th>\n","      <th>profile_image_url</th>\n","      <th>screen_name</th>\n","      <th>statuses_count</th>\n","      <th>verified</th>\n","      <th>average_tweets_per_day</th>\n","      <th>account_age_days</th>\n","      <th>account_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1476567131000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Blame @xaiax, Inspired by @MakingInvisible, us...</td>\n","      <td>4</td>\n","      <td>1589</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>787405734442958848</td>\n","      <td>en</td>\n","      <td>unknown</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/7874121826...</td>\n","      <td>best_in_dumbest</td>\n","      <td>11041</td>\n","      <td>False</td>\n","      <td>7.870</td>\n","      <td>1403</td>\n","      <td>bot</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1478667690000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Photographing the American West since 1980. I ...</td>\n","      <td>536</td>\n","      <td>860</td>\n","      <td>880</td>\n","      <td>False</td>\n","      <td>796216118331310080</td>\n","      <td>en</td>\n","      <td>Estados Unidos</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/8023296328...</td>\n","      <td>CJRubinPhoto</td>\n","      <td>252</td>\n","      <td>False</td>\n","      <td>0.183</td>\n","      <td>1379</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1497677667000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Scruffy looking nerf herder and @twitch broadc...</td>\n","      <td>3307</td>\n","      <td>172</td>\n","      <td>594</td>\n","      <td>True</td>\n","      <td>875949740503859204</td>\n","      <td>en</td>\n","      <td>Los Angeles, CA</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/1278890453...</td>\n","      <td>SVGEGENT</td>\n","      <td>1001</td>\n","      <td>False</td>\n","      <td>0.864</td>\n","      <td>1159</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1469107945000000000</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>Wife.Godmother.Friend.Feline Fanatic! Assistan...</td>\n","      <td>8433</td>\n","      <td>517</td>\n","      <td>633</td>\n","      <td>True</td>\n","      <td>756119643622735875</td>\n","      <td>en</td>\n","      <td>Birmingham, AL</td>\n","      <td>NaN</td>\n","      <td>http://pbs.twimg.com/profile_images/1284884924...</td>\n","      <td>TinkerVHELPK5</td>\n","      <td>1324</td>\n","      <td>False</td>\n","      <td>0.889</td>\n","      <td>1489</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1326645155000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Loan coach at @mancity &amp; Aspiring DJ</td>\n","      <td>88</td>\n","      <td>753678</td>\n","      <td>116</td>\n","      <td>True</td>\n","      <td>464781334</td>\n","      <td>en</td>\n","      <td>England, United Kingdom</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/9952566258...</td>\n","      <td>JoleonLescott</td>\n","      <td>4202</td>\n","      <td>True</td>\n","      <td>1.339</td>\n","      <td>3138</td>\n","      <td>human</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7e17fb9-f121-40c4-a972-82bb8813d30d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b7e17fb9-f121-40c4-a972-82bb8813d30d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b7e17fb9-f121-40c4-a972-82bb8813d30d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":153}]},{"cell_type":"markdown","source":["# Processing the Data"],"metadata":{"id":"r7zPkTmatgzY"}},{"cell_type":"markdown","source":["process data\n","\n","\n","** note, df_str is a stripped down version of the origional dataframe, which removes any text from the learning model due to complications... instead the information is transformed into boolen true and false in 0s and 1s, for the supervised learning algorthims to comprehend and train on. Lastly, the tweet description attribute is broken down based on the number of words in the tweet,,, this is something I would like to vectorize better moving forward."],"metadata":{"id":"ktZblMKora8q"}},{"cell_type":"code","source":["df_str = dataset.copy()\n","\n","df_str"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":704},"id":"tZK5noYRsIB0","executionInfo":{"status":"ok","timestamp":1669080407160,"user_tz":360,"elapsed":669,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"486e2e78-e48a-4e06-a00c-8ec264bd2560"},"execution_count":154,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0           created_at  default_profile  \\\n","0               0  1476567131000000000            False   \n","1               1  1478667690000000000            False   \n","2               2  1497677667000000000            False   \n","3               3  1469107945000000000             True   \n","4               4  1326645155000000000            False   \n","...           ...                  ...              ...   \n","37433       37433  1249737075000000000             True   \n","37434       37434  1357421737000000000            False   \n","37435       37435  1358186754000000000             True   \n","37436       37436  1347293522000000000            False   \n","37437       37437  1323694768000000000            False   \n","\n","       default_profile_image  \\\n","0                      False   \n","1                      False   \n","2                      False   \n","3                      False   \n","4                      False   \n","...                      ...   \n","37433                  False   \n","37434                  False   \n","37435                  False   \n","37436                  False   \n","37437                  False   \n","\n","                                             description  favourites_count  \\\n","0      Blame @xaiax, Inspired by @MakingInvisible, us...                 4   \n","1      Photographing the American West since 1980. I ...               536   \n","2      Scruffy looking nerf herder and @twitch broadc...              3307   \n","3      Wife.Godmother.Friend.Feline Fanatic! Assistan...              8433   \n","4                   Loan coach at @mancity & Aspiring DJ                88   \n","...                                                  ...               ...   \n","37433  Role: Stock Taker. Past Roles: Nanny, Sales As...               651   \n","37434                    KINGDOM LANDLORD #FreeCornBread              8839   \n","37435  Bienvenid@s al Twitter Oficial de Sergio Dalma...               399   \n","37436  Just a good guy wrapped up in a bad system.\\nA...               967   \n","37437                                              你好！中国              1092   \n","\n","       followers_count  friends_count  geo_enabled                  id   lang  \\\n","0                 1589              4        False  787405734442958848     en   \n","1                  860            880        False  796216118331310080     en   \n","2                  172            594         True  875949740503859204     en   \n","3                  517            633         True  756119643622735875     en   \n","4               753678            116         True           464781334     en   \n","...                ...            ...          ...                 ...    ...   \n","37433              139           1105        False            63963107     en   \n","37434          1121486            605         True          1064042478     en   \n","37435            85630            190        False          1089732602     it   \n","37436              138            166         True           815529979     en   \n","37437                5             39        False           434896892  zh-cn   \n","\n","                      location  \\\n","0                      unknown   \n","1               Estados Unidos   \n","2              Los Angeles, CA   \n","3               Birmingham, AL   \n","4      England, United Kingdom   \n","...                        ...   \n","37433       Kingston Upon Hull   \n","37434                  unknown   \n","37435  En constante movimiento   \n","37436          Los Angeles, CA   \n","37437                       中国   \n","\n","                            profile_background_image_url  \\\n","0       http://abs.twimg.com/images/themes/theme1/bg.png   \n","1       http://abs.twimg.com/images/themes/theme1/bg.png   \n","2       http://abs.twimg.com/images/themes/theme1/bg.png   \n","3                                                    NaN   \n","4       http://abs.twimg.com/images/themes/theme1/bg.png   \n","...                                                  ...   \n","37433   http://abs.twimg.com/images/themes/theme1/bg.png   \n","37434   http://abs.twimg.com/images/themes/theme1/bg.png   \n","37435   http://abs.twimg.com/images/themes/theme1/bg.png   \n","37436  http://abs.twimg.com/images/themes/theme14/bg.gif   \n","37437  http://abs.twimg.com/images/themes/theme19/bg.gif   \n","\n","                                       profile_image_url      screen_name  \\\n","0      http://pbs.twimg.com/profile_images/7874121826...  best_in_dumbest   \n","1      http://pbs.twimg.com/profile_images/8023296328...     CJRubinPhoto   \n","2      http://pbs.twimg.com/profile_images/1278890453...         SVGEGENT   \n","3      http://pbs.twimg.com/profile_images/1284884924...    TinkerVHELPK5   \n","4      http://pbs.twimg.com/profile_images/9952566258...    JoleonLescott   \n","...                                                  ...              ...   \n","37433  http://pbs.twimg.com/profile_images/5844684414...       butchsekab   \n","37434  http://pbs.twimg.com/profile_images/9511349456...      Mathieu_Era   \n","37435  http://pbs.twimg.com/profile_images/1174733822...    SDalmaoficial   \n","37436  http://pbs.twimg.com/profile_images/1265807908...      VinceYearly   \n","37437  http://pbs.twimg.com/profile_images/1688940752...          zhemcom   \n","\n","       statuses_count  verified  average_tweets_per_day  account_age_days  \\\n","0               11041     False                   7.870              1403   \n","1                 252     False                   0.183              1379   \n","2                1001     False                   0.864              1159   \n","3                1324     False                   0.889              1489   \n","4                4202      True                   1.339              3138   \n","...               ...       ...                     ...               ...   \n","37433             340     False                   0.084              4028   \n","37434           24970      True                   8.976              2782   \n","37435            6174      True                   2.226              2773   \n","37436             982     False                   0.339              2899   \n","37437            1563     False                   0.493              3172   \n","\n","      account_type  \n","0              bot  \n","1            human  \n","2            human  \n","3            human  \n","4            human  \n","...            ...  \n","37433        human  \n","37434        human  \n","37435        human  \n","37436        human  \n","37437          bot  \n","\n","[37438 rows x 20 columns]"],"text/html":["\n","  <div id=\"df-7077c280-97ef-45b3-9800-02403c335381\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>created_at</th>\n","      <th>default_profile</th>\n","      <th>default_profile_image</th>\n","      <th>description</th>\n","      <th>favourites_count</th>\n","      <th>followers_count</th>\n","      <th>friends_count</th>\n","      <th>geo_enabled</th>\n","      <th>id</th>\n","      <th>lang</th>\n","      <th>location</th>\n","      <th>profile_background_image_url</th>\n","      <th>profile_image_url</th>\n","      <th>screen_name</th>\n","      <th>statuses_count</th>\n","      <th>verified</th>\n","      <th>average_tweets_per_day</th>\n","      <th>account_age_days</th>\n","      <th>account_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1476567131000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Blame @xaiax, Inspired by @MakingInvisible, us...</td>\n","      <td>4</td>\n","      <td>1589</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>787405734442958848</td>\n","      <td>en</td>\n","      <td>unknown</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/7874121826...</td>\n","      <td>best_in_dumbest</td>\n","      <td>11041</td>\n","      <td>False</td>\n","      <td>7.870</td>\n","      <td>1403</td>\n","      <td>bot</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1478667690000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Photographing the American West since 1980. I ...</td>\n","      <td>536</td>\n","      <td>860</td>\n","      <td>880</td>\n","      <td>False</td>\n","      <td>796216118331310080</td>\n","      <td>en</td>\n","      <td>Estados Unidos</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/8023296328...</td>\n","      <td>CJRubinPhoto</td>\n","      <td>252</td>\n","      <td>False</td>\n","      <td>0.183</td>\n","      <td>1379</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1497677667000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Scruffy looking nerf herder and @twitch broadc...</td>\n","      <td>3307</td>\n","      <td>172</td>\n","      <td>594</td>\n","      <td>True</td>\n","      <td>875949740503859204</td>\n","      <td>en</td>\n","      <td>Los Angeles, CA</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/1278890453...</td>\n","      <td>SVGEGENT</td>\n","      <td>1001</td>\n","      <td>False</td>\n","      <td>0.864</td>\n","      <td>1159</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1469107945000000000</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>Wife.Godmother.Friend.Feline Fanatic! Assistan...</td>\n","      <td>8433</td>\n","      <td>517</td>\n","      <td>633</td>\n","      <td>True</td>\n","      <td>756119643622735875</td>\n","      <td>en</td>\n","      <td>Birmingham, AL</td>\n","      <td>NaN</td>\n","      <td>http://pbs.twimg.com/profile_images/1284884924...</td>\n","      <td>TinkerVHELPK5</td>\n","      <td>1324</td>\n","      <td>False</td>\n","      <td>0.889</td>\n","      <td>1489</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1326645155000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Loan coach at @mancity &amp; Aspiring DJ</td>\n","      <td>88</td>\n","      <td>753678</td>\n","      <td>116</td>\n","      <td>True</td>\n","      <td>464781334</td>\n","      <td>en</td>\n","      <td>England, United Kingdom</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/9952566258...</td>\n","      <td>JoleonLescott</td>\n","      <td>4202</td>\n","      <td>True</td>\n","      <td>1.339</td>\n","      <td>3138</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37433</th>\n","      <td>37433</td>\n","      <td>1249737075000000000</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>Role: Stock Taker. Past Roles: Nanny, Sales As...</td>\n","      <td>651</td>\n","      <td>139</td>\n","      <td>1105</td>\n","      <td>False</td>\n","      <td>63963107</td>\n","      <td>en</td>\n","      <td>Kingston Upon Hull</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/5844684414...</td>\n","      <td>butchsekab</td>\n","      <td>340</td>\n","      <td>False</td>\n","      <td>0.084</td>\n","      <td>4028</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>37434</th>\n","      <td>37434</td>\n","      <td>1357421737000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>KINGDOM LANDLORD #FreeCornBread</td>\n","      <td>8839</td>\n","      <td>1121486</td>\n","      <td>605</td>\n","      <td>True</td>\n","      <td>1064042478</td>\n","      <td>en</td>\n","      <td>unknown</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/9511349456...</td>\n","      <td>Mathieu_Era</td>\n","      <td>24970</td>\n","      <td>True</td>\n","      <td>8.976</td>\n","      <td>2782</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>37435</th>\n","      <td>37435</td>\n","      <td>1358186754000000000</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>Bienvenid@s al Twitter Oficial de Sergio Dalma...</td>\n","      <td>399</td>\n","      <td>85630</td>\n","      <td>190</td>\n","      <td>False</td>\n","      <td>1089732602</td>\n","      <td>it</td>\n","      <td>En constante movimiento</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/1174733822...</td>\n","      <td>SDalmaoficial</td>\n","      <td>6174</td>\n","      <td>True</td>\n","      <td>2.226</td>\n","      <td>2773</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>37436</th>\n","      <td>37436</td>\n","      <td>1347293522000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Just a good guy wrapped up in a bad system.\\nA...</td>\n","      <td>967</td>\n","      <td>138</td>\n","      <td>166</td>\n","      <td>True</td>\n","      <td>815529979</td>\n","      <td>en</td>\n","      <td>Los Angeles, CA</td>\n","      <td>http://abs.twimg.com/images/themes/theme14/bg.gif</td>\n","      <td>http://pbs.twimg.com/profile_images/1265807908...</td>\n","      <td>VinceYearly</td>\n","      <td>982</td>\n","      <td>False</td>\n","      <td>0.339</td>\n","      <td>2899</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>37437</th>\n","      <td>37437</td>\n","      <td>1323694768000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>你好！中国</td>\n","      <td>1092</td>\n","      <td>5</td>\n","      <td>39</td>\n","      <td>False</td>\n","      <td>434896892</td>\n","      <td>zh-cn</td>\n","      <td>中国</td>\n","      <td>http://abs.twimg.com/images/themes/theme19/bg.gif</td>\n","      <td>http://pbs.twimg.com/profile_images/1688940752...</td>\n","      <td>zhemcom</td>\n","      <td>1563</td>\n","      <td>False</td>\n","      <td>0.493</td>\n","      <td>3172</td>\n","      <td>bot</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>37438 rows × 20 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7077c280-97ef-45b3-9800-02403c335381')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7077c280-97ef-45b3-9800-02403c335381 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7077c280-97ef-45b3-9800-02403c335381');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":154}]},{"cell_type":"code","source":["# numericify everything\n","\n","#  0 is true / info present\n","#  1 is false/ no info\n","\n","df_str.loc[(df_str.default_profile) == 'false', \"default_profile\" ] = 1\n","df_str.loc[(df_str.default_profile) != 'false', \"default_profile\" ] = 0\n","df_str[\"default_profile\"].astype(np.int64)\n","\n","df_str.loc[(df_str.default_profile_image) == 'false', \"default_profile_image\" ] = 1\n","df_str.loc[(df_str.default_profile_image) != 'false', \"default_profile_image\" ] = 0\n","df_str['default_profile_image'] = pd.Series(df_str['default_profile_image'], dtype=\"int64\")\n","\n","df_str.loc[(df_str.geo_enabled) == 'false', \"geo_enabled\" ] = 1\n","df_str.loc[(df_str.geo_enabled) != 'false', \"geo_enabled\" ] = 0\n","df_str['geo_enabled'] = pd.Series(df_str['geo_enabled'], dtype=\"int64\")\n","\n","\n","df_str.loc[(df_str.lang) == 'en', \"lang\" ] = 0\n","df_str.loc[(df_str.lang) != 'en', \"lang\" ] = 1 \n","df_str['lang'] = pd.Series(df_str['lang'], dtype=\"int64\")\n","\n","\n","df_str.loc[(df_str.verified) == 'false', \"verified\" ] = 1\n","df_str.loc[(df_str.verified) != 'false', \"verified\" ] = 0\n","df_str['verified'] = pd.Series(df_str['verified'], dtype=\"int64\")\n","\n","\n","df_str.loc[(df_str.account_type) == 'bot', \"account_type\" ] = 1\n","df_str.loc[(df_str.account_type) == 'human', \"account_type\" ] = 0\n","df_str['account_type'] = pd.Series(df_str['account_type'], dtype=\"int64\")\n","\n","\n","df_str.loc[(df_str.location) == 'unknown', \"location\" ] = 1\n","df_str.loc[(df_str.location) != 'unknown', \"location\" ] = 0\n","df_str['location'] = pd.Series(df_str['location'], dtype=\"int64\")\n","\n","\n","dataset['description_str'] = dataset['description'].str.split(',') \n","dataset['description_str'] = pd.Series(dataset['description_str'], dtype=\"string\")\n","\n","df_str.loc[(df_str.description) == 'NaN', \"description\" ] = 1\n","df_str.loc[(df_str.description) != 'NaN', \"description\" ] = dataset['description'].apply(lambda x: len(str(x).split(' ')))\n","df_str['description'] = pd.Series(df_str['description'], dtype=\"int64\")\n","\n","\n","\n","df_str.drop(columns=['Unnamed: 0', 'profile_background_image_url', 'profile_image_url', 'screen_name'], inplace = True, axis =1)\n"],"metadata":{"id":"7oZH8I58qQpm","executionInfo":{"status":"ok","timestamp":1669080409266,"user_tz":360,"elapsed":406,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":155,"outputs":[]},{"cell_type":"code","source":["df_str.sample(5)\n","\n","df_str.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1AUglsHItwfR","executionInfo":{"status":"ok","timestamp":1669080411627,"user_tz":360,"elapsed":173,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"681b179c-0c89-46c9-bb41-b1b44bdaf599"},"execution_count":156,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 37438 entries, 0 to 37437\n","Data columns (total 16 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   created_at              37438 non-null  int64  \n"," 1   default_profile         37438 non-null  object \n"," 2   default_profile_image   37438 non-null  int64  \n"," 3   description             37438 non-null  int64  \n"," 4   favourites_count        37438 non-null  int64  \n"," 5   followers_count         37438 non-null  int64  \n"," 6   friends_count           37438 non-null  int64  \n"," 7   geo_enabled             37438 non-null  int64  \n"," 8   id                      37438 non-null  int64  \n"," 9   lang                    37438 non-null  int64  \n"," 10  location                37438 non-null  int64  \n"," 11  statuses_count          37438 non-null  int64  \n"," 12  verified                37438 non-null  int64  \n"," 13  average_tweets_per_day  37438 non-null  float64\n"," 14  account_age_days        37438 non-null  int64  \n"," 15  account_type            37438 non-null  int64  \n","dtypes: float64(1), int64(14), object(1)\n","memory usage: 4.6+ MB\n"]}]},{"cell_type":"code","source":["# temp to get rid of obj\n","\n","df_str.drop(['default_profile'], inplace = True, axis =1)\n","\n","df_str.sample()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"id":"MoTMBYwK2MK2","executionInfo":{"status":"ok","timestamp":1669080415362,"user_tz":360,"elapsed":175,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"643f4aeb-cf40-44dd-b99f-1591b4be53ad"},"execution_count":157,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                created_at  default_profile_image  description  \\\n","19819  1278033900000000000                      0           18   \n","\n","       favourites_count  followers_count  friends_count  geo_enabled  \\\n","19819             30856              266            385            0   \n","\n","              id  lang  location  statuses_count  verified  \\\n","19819  161881443     1         0           12745         0   \n","\n","       average_tweets_per_day  account_age_days  account_type  \n","19819                   3.444              3701             0  "],"text/html":["\n","  <div id=\"df-e866b1f0-7d85-4f3a-ae87-48a2a9f06ef5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>created_at</th>\n","      <th>default_profile_image</th>\n","      <th>description</th>\n","      <th>favourites_count</th>\n","      <th>followers_count</th>\n","      <th>friends_count</th>\n","      <th>geo_enabled</th>\n","      <th>id</th>\n","      <th>lang</th>\n","      <th>location</th>\n","      <th>statuses_count</th>\n","      <th>verified</th>\n","      <th>average_tweets_per_day</th>\n","      <th>account_age_days</th>\n","      <th>account_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>19819</th>\n","      <td>1278033900000000000</td>\n","      <td>0</td>\n","      <td>18</td>\n","      <td>30856</td>\n","      <td>266</td>\n","      <td>385</td>\n","      <td>0</td>\n","      <td>161881443</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12745</td>\n","      <td>0</td>\n","      <td>3.444</td>\n","      <td>3701</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e866b1f0-7d85-4f3a-ae87-48a2a9f06ef5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e866b1f0-7d85-4f3a-ae87-48a2a9f06ef5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e866b1f0-7d85-4f3a-ae87-48a2a9f06ef5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":157}]},{"cell_type":"code","source":["def text_preprocess(sen): \n","\n","   sen = re.sub('[^a-zA-Z]', ' ', sen)\n","\n","   sen = re.sub(r\"\\s+[a-zA-Z]\\s+\", ' ', sen)\n","\n","   sen = re.sub(r'\\s+', ' ', sen)\n","\n","   return sen\n"," \n","#  code found online... doesnt function as I would like..."],"metadata":{"id":"8tkk-4izc_mD","executionInfo":{"status":"ok","timestamp":1669080317318,"user_tz":360,"elapsed":145,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":144,"outputs":[]},{"cell_type":"code","source":["# X_tweets = []  \n","# messages = list(X)  \n","# for mes in messages:  \n","#     messages[mes] = ' '.join(re.sub(\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t]) |(\\w+:\\/\\/\\S+)\", \" \", mes).split())"],"metadata":{"id":"Xv9dx0ooqZfi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# from tqdm import tqdm\n","\n","# import re\n","# !pip install emoji==1.7\n","# import emoji\n","# import nltk\n","# nltk.download('words')\n","# words = set(nltk.corpus.words.words())\n","\n","\n","# def cleaner(tweet):\n","#     tweet = re.sub(\"@[A-Za-z0-9]+\",\"\",tweet) #Remove @ sign\n","#     tweet = re.sub(r\"(?:\\@|http?\\://|https?\\://|www)\\S+\", \"\", tweet) #Remove http links\n","#     tweet = \" \".join(tweet.split())\n","#     tweet = ''.join(c for c in tweet if c not in emoji.UNICODE_EMOJI) #Remove Emojis\n","#     tweet = tweet.replace(\"#\", \"\").replace(\"_\", \" \") #Remove hashtag sign but keep the text\n","#     tweet = \" \".join(w for w in nltk.wordpunct_tokenize(tweet) \\\n","#          if w.lower() in words or not w.isalpha())\n","#     return tweet\n","\n","\n","\n","# dataset['description_str'] = dataset['description_str'].str.replace(r'[^\\w\\s]+', '')\n","\n","# # dataset['description_str'] = dataset['description_str'].map(lambda x: cleaner(x))\n","\n","# dataset['description_str']=cleaner(dataset['description_str'])"],"metadata":{"id":"3vj9uhx7T-WI","executionInfo":{"status":"ok","timestamp":1669081499238,"user_tz":360,"elapsed":161,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":170,"outputs":[]},{"cell_type":"code","source":["# seperate into x and y\n","X = df_str.iloc[:,:-1]\n","y = df_str.iloc[:, -1]\n","\n","# X.drop(columns=['Unnamed: 0', 'profile_background_image_url', 'profile_image_url', 'screen_name'], inplace=True, axis=1)"],"metadata":{"id":"FHCavG_6c5ZB","executionInfo":{"status":"ok","timestamp":1669080421361,"user_tz":360,"elapsed":160,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":158,"outputs":[]},{"cell_type":"code","source":["X.info()\n","\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":840},"id":"pI8eXRUJxw85","executionInfo":{"status":"ok","timestamp":1669080422925,"user_tz":360,"elapsed":218,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"c23bdbe3-4ec9-446a-df52-ad2b39eb73a4"},"execution_count":159,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 37438 entries, 0 to 37437\n","Data columns (total 14 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   created_at              37438 non-null  int64  \n"," 1   default_profile_image   37438 non-null  int64  \n"," 2   description             37438 non-null  int64  \n"," 3   favourites_count        37438 non-null  int64  \n"," 4   followers_count         37438 non-null  int64  \n"," 5   friends_count           37438 non-null  int64  \n"," 6   geo_enabled             37438 non-null  int64  \n"," 7   id                      37438 non-null  int64  \n"," 8   lang                    37438 non-null  int64  \n"," 9   location                37438 non-null  int64  \n"," 10  statuses_count          37438 non-null  int64  \n"," 11  verified                37438 non-null  int64  \n"," 12  average_tweets_per_day  37438 non-null  float64\n"," 13  account_age_days        37438 non-null  int64  \n","dtypes: float64(1), int64(13)\n","memory usage: 4.0 MB\n"]},{"output_type":"execute_result","data":{"text/plain":["                created_at  default_profile_image  description  \\\n","0      1476567131000000000                      0           17   \n","1      1478667690000000000                      0           24   \n","2      1497677667000000000                      0            9   \n","3      1469107945000000000                      0            9   \n","4      1326645155000000000                      0            7   \n","...                    ...                    ...          ...   \n","37433  1249737075000000000                      0           20   \n","37434  1357421737000000000                      0            3   \n","37435  1358186754000000000                      0            8   \n","37436  1347293522000000000                      0           16   \n","37437  1323694768000000000                      0            1   \n","\n","       favourites_count  followers_count  friends_count  geo_enabled  \\\n","0                     4             1589              4            0   \n","1                   536              860            880            0   \n","2                  3307              172            594            0   \n","3                  8433              517            633            0   \n","4                    88           753678            116            0   \n","...                 ...              ...            ...          ...   \n","37433               651              139           1105            0   \n","37434              8839          1121486            605            0   \n","37435               399            85630            190            0   \n","37436               967              138            166            0   \n","37437              1092                5             39            0   \n","\n","                       id  lang  location  statuses_count  verified  \\\n","0      787405734442958848     1         0           11041         0   \n","1      796216118331310080     1         0             252         0   \n","2      875949740503859204     1         0            1001         0   \n","3      756119643622735875     1         0            1324         0   \n","4               464781334     1         0            4202         0   \n","...                   ...   ...       ...             ...       ...   \n","37433            63963107     1         0             340         0   \n","37434          1064042478     1         0           24970         0   \n","37435          1089732602     1         0            6174         0   \n","37436           815529979     1         0             982         0   \n","37437           434896892     1         0            1563         0   \n","\n","       average_tweets_per_day  account_age_days  \n","0                       7.870              1403  \n","1                       0.183              1379  \n","2                       0.864              1159  \n","3                       0.889              1489  \n","4                       1.339              3138  \n","...                       ...               ...  \n","37433                   0.084              4028  \n","37434                   8.976              2782  \n","37435                   2.226              2773  \n","37436                   0.339              2899  \n","37437                   0.493              3172  \n","\n","[37438 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-f7b843e8-eff0-4d83-b0a5-a948cd4e4682\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>created_at</th>\n","      <th>default_profile_image</th>\n","      <th>description</th>\n","      <th>favourites_count</th>\n","      <th>followers_count</th>\n","      <th>friends_count</th>\n","      <th>geo_enabled</th>\n","      <th>id</th>\n","      <th>lang</th>\n","      <th>location</th>\n","      <th>statuses_count</th>\n","      <th>verified</th>\n","      <th>average_tweets_per_day</th>\n","      <th>account_age_days</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1476567131000000000</td>\n","      <td>0</td>\n","      <td>17</td>\n","      <td>4</td>\n","      <td>1589</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>787405734442958848</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11041</td>\n","      <td>0</td>\n","      <td>7.870</td>\n","      <td>1403</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1478667690000000000</td>\n","      <td>0</td>\n","      <td>24</td>\n","      <td>536</td>\n","      <td>860</td>\n","      <td>880</td>\n","      <td>0</td>\n","      <td>796216118331310080</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>252</td>\n","      <td>0</td>\n","      <td>0.183</td>\n","      <td>1379</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1497677667000000000</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>3307</td>\n","      <td>172</td>\n","      <td>594</td>\n","      <td>0</td>\n","      <td>875949740503859204</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1001</td>\n","      <td>0</td>\n","      <td>0.864</td>\n","      <td>1159</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1469107945000000000</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>8433</td>\n","      <td>517</td>\n","      <td>633</td>\n","      <td>0</td>\n","      <td>756119643622735875</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1324</td>\n","      <td>0</td>\n","      <td>0.889</td>\n","      <td>1489</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1326645155000000000</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>88</td>\n","      <td>753678</td>\n","      <td>116</td>\n","      <td>0</td>\n","      <td>464781334</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4202</td>\n","      <td>0</td>\n","      <td>1.339</td>\n","      <td>3138</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37433</th>\n","      <td>1249737075000000000</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>651</td>\n","      <td>139</td>\n","      <td>1105</td>\n","      <td>0</td>\n","      <td>63963107</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>340</td>\n","      <td>0</td>\n","      <td>0.084</td>\n","      <td>4028</td>\n","    </tr>\n","    <tr>\n","      <th>37434</th>\n","      <td>1357421737000000000</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8839</td>\n","      <td>1121486</td>\n","      <td>605</td>\n","      <td>0</td>\n","      <td>1064042478</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>24970</td>\n","      <td>0</td>\n","      <td>8.976</td>\n","      <td>2782</td>\n","    </tr>\n","    <tr>\n","      <th>37435</th>\n","      <td>1358186754000000000</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>399</td>\n","      <td>85630</td>\n","      <td>190</td>\n","      <td>0</td>\n","      <td>1089732602</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6174</td>\n","      <td>0</td>\n","      <td>2.226</td>\n","      <td>2773</td>\n","    </tr>\n","    <tr>\n","      <th>37436</th>\n","      <td>1347293522000000000</td>\n","      <td>0</td>\n","      <td>16</td>\n","      <td>967</td>\n","      <td>138</td>\n","      <td>166</td>\n","      <td>0</td>\n","      <td>815529979</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>982</td>\n","      <td>0</td>\n","      <td>0.339</td>\n","      <td>2899</td>\n","    </tr>\n","    <tr>\n","      <th>37437</th>\n","      <td>1323694768000000000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1092</td>\n","      <td>5</td>\n","      <td>39</td>\n","      <td>0</td>\n","      <td>434896892</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1563</td>\n","      <td>0</td>\n","      <td>0.493</td>\n","      <td>3172</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>37438 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7b843e8-eff0-4d83-b0a5-a948cd4e4682')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f7b843e8-eff0-4d83-b0a5-a948cd4e4682 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f7b843e8-eff0-4d83-b0a5-a948cd4e4682');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":159}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YYsVgqvI8kIe","executionInfo":{"status":"ok","timestamp":1669080435444,"user_tz":360,"elapsed":167,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"6810e40c-7650-48ae-9194-13aa8dc855ff"},"execution_count":160,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        1\n","1        0\n","2        0\n","3        0\n","4        0\n","        ..\n","37433    0\n","37434    0\n","37435    0\n","37436    0\n","37437    1\n","Name: account_type, Length: 37438, dtype: int64"]},"metadata":{},"execution_count":160}]},{"cell_type":"code","source":["# import nltk\n","# nltk.download('stopwords')\n","\n","\n","# from nltk.corpus import stopwords  \n","# from sklearn.feature_extraction.text import TfidfVectorizer  \n","  \n","# tfidf = TfidfVectorizer(sublinear_tf=True, min_df=5, norm='l2', encoding='latin-1', ngram_range=(1, 2), stop_words='english')\n","# features = tfidf.fit_transform(dataset.description_str).toarray()\n","# labels = dataset.category_id\n","# features.shape"],"metadata":{"id":"jA36N-6Goydc","executionInfo":{"status":"ok","timestamp":1669081743845,"user_tz":360,"elapsed":163,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":171,"outputs":[]},{"cell_type":"code","source":["\n","# tfidf_vec = TfidfVectorizer (max_features=5000, min_df=50, max_df=0.8, stop_words=stopwords.words('english'))  \n","# X= tfidf_vec.fit_transform(list(dataset['description'])).toarray()"],"metadata":{"id":"KpiOPTVPdD06","executionInfo":{"status":"ok","timestamp":1669081746714,"user_tz":360,"elapsed":150,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":172,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"SiQ4cyMlBrbv"}},{"cell_type":"markdown","source":["# Dataset information statistics and graphics"],"metadata":{"id":"zpEjdmAhtJAE"}},{"cell_type":"markdown","source":["note: the dataset is largely english tweet flocused for training..."],"metadata":{"id":"8OJ_E105kHm8"}},{"cell_type":"code","source":["plt.rcParams[\"figure.figsize\"] = [8,10] \n","dataset['lang'].value_counts().plot(kind='pie', autopct='%1.0f%%')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":494},"id":"2LfpHQBmb_CA","executionInfo":{"status":"ok","timestamp":1668724586522,"user_tz":300,"elapsed":696,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"afb2f1ba-a818-44f0-8ef7-782d9e0f7ee6"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd93dd1b990>"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x720 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#this may be something to look into more with the new verfied rules"],"metadata":{"id":"CqREn4Sfk8e_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.countplot(x='verified', data=dataset, hue = 'account_type')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":623},"id":"ogwras2dcwCS","executionInfo":{"status":"ok","timestamp":1668638878205,"user_tz":300,"elapsed":332,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"83d29b92-bb49-4967-e590-f5c3014388ae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f067462ba90>"]},"metadata":{},"execution_count":43},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Fit and Train Model"],"metadata":{"id":"VsdYSxfFtx8z"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split \n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)"],"metadata":{"id":"4nhnolf3dQZC","executionInfo":{"status":"ok","timestamp":1669080446485,"user_tz":360,"elapsed":301,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":161,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier \n","\n","\n","rf_clf = RandomForestClassifier(n_estimators=250, random_state=0) \n","rf_clf.fit(X_train, y_train) \n","y_pred = rf_clf.predict(X_test)\n"],"metadata":{"id":"WwciCxj7dTG_","executionInfo":{"status":"ok","timestamp":1669081397056,"user_tz":360,"elapsed":19521,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":168,"outputs":[]},{"cell_type":"code","source":["y_pred"],"metadata":{"id":"WdGVMNE7dnYQ","executionInfo":{"status":"ok","timestamp":1669082565433,"user_tz":360,"elapsed":257,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"359ca210-06be-4d3b-ab15-25638ec04e48"},"execution_count":173,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 0, ..., 0, 0, 1])"]},"metadata":{},"execution_count":173}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, confusion_matrix, accuracy_score \n","\n","print(accuracy_score(y_test,y_pred))\n","\n","print(confusion_matrix(y_test,y_pred)) \n","print(classification_report(y_test,y_pred)) \n","\n","\n","accuracy_score"],"metadata":{"id":"5tN7t3fYdXJW","executionInfo":{"status":"ok","timestamp":1669081410830,"user_tz":360,"elapsed":153,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"01c92f14-cbb0-46cd-bdeb-79d93bd239cc"},"execution_count":169,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8759615384615385\n","[[5896  395]\n"," [ 766 2303]]\n","              precision    recall  f1-score   support\n","\n","           0       0.89      0.94      0.91      6291\n","           1       0.85      0.75      0.80      3069\n","\n","    accuracy                           0.88      9360\n","   macro avg       0.87      0.84      0.85      9360\n","weighted avg       0.87      0.88      0.87      9360\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["<function sklearn.metrics._classification.accuracy_score(y_true, y_pred, *, normalize=True, sample_weight=None)>"]},"metadata":{},"execution_count":169}]},{"cell_type":"code","source":["from sklearn.svm import LinearSVC\n","from sklearn import svm, datasets\n","from sklearn.datasets import make_classification\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import cross_val_score\n","from sklearn.metrics import confusion_matrix\n","import matplotlib.pyplot as plt\n","\n","from sklearn.metrics import classification_report\n","\n","lsvc = LinearSVC()\n","lsvc.dual=False\n","max_iter=1200\n","print(lsvc)\n","\n","print()\n","\n","lsvc.fit(X_train, y_train)\n","score = lsvc.score(X_train, y_train)\n","print(\"Score: \", score)\n","\n","cv_scores = cross_val_score(lsvc, X_train, y_train, cv=10)\n","print(\"CV average score: %.2f\" % cv_scores.mean())\n","\n","ypred = lsvc.predict(X_test)\n","\n","cm = confusion_matrix(y_test, ypred)\n","print(cm)\n","\n","cr = classification_report(y_test, ypred)\n","print(cr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nejqIH607NJK","executionInfo":{"status":"ok","timestamp":1669080482057,"user_tz":360,"elapsed":649,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"6e741984-3e92-4bff-e70b-151523089a22"},"execution_count":164,"outputs":[{"output_type":"stream","name":"stdout","text":["LinearSVC(dual=False)\n","\n","Score:  0.6667853835743287\n","CV average score: 0.67\n","[[6291    0]\n"," [3069    0]]\n","              precision    recall  f1-score   support\n","\n","           0       0.67      1.00      0.80      6291\n","           1       0.00      0.00      0.00      3069\n","\n","    accuracy                           0.67      9360\n","   macro avg       0.34      0.50      0.40      9360\n","weighted avg       0.45      0.67      0.54      9360\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","clf = LogisticRegression(random_state=0).fit(X_train, y_train)\n","\n","y_pred = clf.predict(X_test)\n","\n","ypred = clf.predict(X_test)\n","\n","cv_scores = cross_val_score(clf, X_train, y_train, cv=10)\n","print(\"CV average score: %.2f\" % cv_scores.mean())\n","\n","cm = confusion_matrix(y_test, ypred)\n","print(cm)\n","\n","cr = classification_report(y_test, ypred)\n","print(cr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZzKMchBa_EQD","executionInfo":{"status":"ok","timestamp":1669081323660,"user_tz":360,"elapsed":3920,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"14ac2f40-6cd0-42ad-901c-4c02772bee10"},"execution_count":167,"outputs":[{"output_type":"stream","name":"stdout","text":["CV average score: 0.67\n","[[6291    0]\n"," [3069    0]]\n","              precision    recall  f1-score   support\n","\n","           0       0.67      1.00      0.80      6291\n","           1       0.00      0.00      0.00      3069\n","\n","    accuracy                           0.67      9360\n","   macro avg       0.34      0.50      0.40      9360\n","weighted avg       0.45      0.67      0.54      9360\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["**Random Forest Classifier has the highest accuracy**"],"metadata":{"id":"2kIXQ3qcAbIu"}},{"cell_type":"markdown","source":["# Tweepy Time"],"metadata":{"id":"37g5NGErFt8V"}},{"cell_type":"markdown","source":["Use twitter Api to get tweets and pull the information into a dataframe"],"metadata":{"id":"fS2tcfC-FsaR"}},{"cell_type":"markdown","source":["# Final Calcs"],"metadata":{"id":"UZObYYy1F5yW"}},{"cell_type":"markdown","source":["determine percentage bots vs humans"],"metadata":{"id":"o4sy5OsBF-6z"}}]}