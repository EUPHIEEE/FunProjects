{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"16NoXmSWrHXxb_d38L5ntlkIwqUV1aEys","timestamp":1669089171248}],"collapsed_sections":["CLnOx6CmsSE2","r7zPkTmatgzY","zpEjdmAhtJAE","VsdYSxfFtx8z","37g5NGErFt8V","Iwnz3xrGLaBY","UZObYYy1F5yW"],"mount_file_id":"1iekHrTFB0uJkI9SjlV7pfd-_LUx5UKQM","authorship_tag":"ABX9TyNiHq4yrIzZSo2Keqpp+9yG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Demo entry..."],"metadata":{"id":"mlGImdKpq-z0"}},{"cell_type":"code","source":[" QUERY1 = 'conversation_id:1598739875179925505 -is:retweet '\n","\n","# QUERY1 = 'conversation_id:1599386592463855616 -is:retweet '\n","\n"],"metadata":{"id":"QFol5YpdrCT2","executionInfo":{"status":"ok","timestamp":1670268396763,"user_tz":300,"elapsed":139,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":385,"outputs":[]},{"cell_type":"markdown","source":["# Read in Dataset "],"metadata":{"id":"CLnOx6CmsSE2"}},{"cell_type":"markdown","source":["dataset from kaggle url below"],"metadata":{"id":"2998bzQXs9Hx"}},{"cell_type":"code","execution_count":308,"metadata":{"id":"LdqDGsPAdUUz","executionInfo":{"status":"ok","timestamp":1670268329739,"user_tz":300,"elapsed":210,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"outputs":[],"source":["import re\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import string\n","import nltk\n","import warnings\n","%matplotlib inline\n","\n","warnings.filterwarnings('ignore', category=DeprecationWarning)\n"]},{"cell_type":"code","source":["# dataset_url = \"kaggle kernels output davidmartngutirrez/bots-accounts-eda -p /path/to/dest\"  \n","\n","\n","from google.colab import drive\n","drive.mount('/content/drive')\n","#!ls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aw7_gDC6bqqp","executionInfo":{"status":"ok","timestamp":1670268331426,"user_tz":300,"elapsed":1717,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"860224bb-b617-4a09-ef1f-47d91ccfd632"},"execution_count":309,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["%cd /content/drive/My\\ Drive/Colab Notebooks/"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j-9XFMXsjYId","executionInfo":{"status":"ok","timestamp":1670268331428,"user_tz":300,"elapsed":20,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"123dd3e6-6dc0-4ac2-90d5-782ef9d963f2"},"execution_count":310,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Colab Notebooks\n"]}]},{"cell_type":"code","source":["dataset = pd.read_csv('twitter_human_bots_dataset.csv', parse_dates=['created_at'])  \n","\n","dataset['created_at'] = pd.to_numeric(pd.to_datetime(dataset['created_at']))\n","dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":387},"id":"cl1_Jh4cjgH3","executionInfo":{"status":"ok","timestamp":1670268331945,"user_tz":300,"elapsed":532,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"3b30fd7d-a136-4841-fe93-8d8a54070f3d"},"execution_count":311,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0           created_at  default_profile  default_profile_image  \\\n","0           0  1476567131000000000            False                  False   \n","1           1  1478667690000000000            False                  False   \n","2           2  1497677667000000000            False                  False   \n","3           3  1469107945000000000             True                  False   \n","4           4  1326645155000000000            False                  False   \n","\n","                                         description  favourites_count  \\\n","0  Blame @xaiax, Inspired by @MakingInvisible, us...                 4   \n","1  Photographing the American West since 1980. I ...               536   \n","2  Scruffy looking nerf herder and @twitch broadc...              3307   \n","3  Wife.Godmother.Friend.Feline Fanatic! Assistan...              8433   \n","4               Loan coach at @mancity & Aspiring DJ                88   \n","\n","   followers_count  friends_count  geo_enabled                  id lang  \\\n","0             1589              4        False  787405734442958848   en   \n","1              860            880        False  796216118331310080   en   \n","2              172            594         True  875949740503859204   en   \n","3              517            633         True  756119643622735875   en   \n","4           753678            116         True           464781334   en   \n","\n","                  location                      profile_background_image_url  \\\n","0                  unknown  http://abs.twimg.com/images/themes/theme1/bg.png   \n","1           Estados Unidos  http://abs.twimg.com/images/themes/theme1/bg.png   \n","2          Los Angeles, CA  http://abs.twimg.com/images/themes/theme1/bg.png   \n","3           Birmingham, AL                                               NaN   \n","4  England, United Kingdom  http://abs.twimg.com/images/themes/theme1/bg.png   \n","\n","                                   profile_image_url      screen_name  \\\n","0  http://pbs.twimg.com/profile_images/7874121826...  best_in_dumbest   \n","1  http://pbs.twimg.com/profile_images/8023296328...     CJRubinPhoto   \n","2  http://pbs.twimg.com/profile_images/1278890453...         SVGEGENT   \n","3  http://pbs.twimg.com/profile_images/1284884924...    TinkerVHELPK5   \n","4  http://pbs.twimg.com/profile_images/9952566258...    JoleonLescott   \n","\n","   statuses_count  verified  average_tweets_per_day  account_age_days  \\\n","0           11041     False                   7.870              1403   \n","1             252     False                   0.183              1379   \n","2            1001     False                   0.864              1159   \n","3            1324     False                   0.889              1489   \n","4            4202      True                   1.339              3138   \n","\n","  account_type  \n","0          bot  \n","1        human  \n","2        human  \n","3        human  \n","4        human  "],"text/html":["\n","  <div id=\"df-e32f0e46-e7c6-4717-803e-0fd209d4106c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>created_at</th>\n","      <th>default_profile</th>\n","      <th>default_profile_image</th>\n","      <th>description</th>\n","      <th>favourites_count</th>\n","      <th>followers_count</th>\n","      <th>friends_count</th>\n","      <th>geo_enabled</th>\n","      <th>id</th>\n","      <th>lang</th>\n","      <th>location</th>\n","      <th>profile_background_image_url</th>\n","      <th>profile_image_url</th>\n","      <th>screen_name</th>\n","      <th>statuses_count</th>\n","      <th>verified</th>\n","      <th>average_tweets_per_day</th>\n","      <th>account_age_days</th>\n","      <th>account_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1476567131000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Blame @xaiax, Inspired by @MakingInvisible, us...</td>\n","      <td>4</td>\n","      <td>1589</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>787405734442958848</td>\n","      <td>en</td>\n","      <td>unknown</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/7874121826...</td>\n","      <td>best_in_dumbest</td>\n","      <td>11041</td>\n","      <td>False</td>\n","      <td>7.870</td>\n","      <td>1403</td>\n","      <td>bot</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1478667690000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Photographing the American West since 1980. I ...</td>\n","      <td>536</td>\n","      <td>860</td>\n","      <td>880</td>\n","      <td>False</td>\n","      <td>796216118331310080</td>\n","      <td>en</td>\n","      <td>Estados Unidos</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/8023296328...</td>\n","      <td>CJRubinPhoto</td>\n","      <td>252</td>\n","      <td>False</td>\n","      <td>0.183</td>\n","      <td>1379</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1497677667000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Scruffy looking nerf herder and @twitch broadc...</td>\n","      <td>3307</td>\n","      <td>172</td>\n","      <td>594</td>\n","      <td>True</td>\n","      <td>875949740503859204</td>\n","      <td>en</td>\n","      <td>Los Angeles, CA</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/1278890453...</td>\n","      <td>SVGEGENT</td>\n","      <td>1001</td>\n","      <td>False</td>\n","      <td>0.864</td>\n","      <td>1159</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1469107945000000000</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>Wife.Godmother.Friend.Feline Fanatic! Assistan...</td>\n","      <td>8433</td>\n","      <td>517</td>\n","      <td>633</td>\n","      <td>True</td>\n","      <td>756119643622735875</td>\n","      <td>en</td>\n","      <td>Birmingham, AL</td>\n","      <td>NaN</td>\n","      <td>http://pbs.twimg.com/profile_images/1284884924...</td>\n","      <td>TinkerVHELPK5</td>\n","      <td>1324</td>\n","      <td>False</td>\n","      <td>0.889</td>\n","      <td>1489</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1326645155000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Loan coach at @mancity &amp; Aspiring DJ</td>\n","      <td>88</td>\n","      <td>753678</td>\n","      <td>116</td>\n","      <td>True</td>\n","      <td>464781334</td>\n","      <td>en</td>\n","      <td>England, United Kingdom</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/9952566258...</td>\n","      <td>JoleonLescott</td>\n","      <td>4202</td>\n","      <td>True</td>\n","      <td>1.339</td>\n","      <td>3138</td>\n","      <td>human</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e32f0e46-e7c6-4717-803e-0fd209d4106c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e32f0e46-e7c6-4717-803e-0fd209d4106c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e32f0e46-e7c6-4717-803e-0fd209d4106c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":311}]},{"cell_type":"code","source":["dataset.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PJfC6MhPcfco","executionInfo":{"status":"ok","timestamp":1670268331945,"user_tz":300,"elapsed":21,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"ae3d2e72-b269-441d-db83-aa019f4c096a"},"execution_count":312,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 37438 entries, 0 to 37437\n","Data columns (total 20 columns):\n"," #   Column                        Non-Null Count  Dtype  \n","---  ------                        --------------  -----  \n"," 0   Unnamed: 0                    37438 non-null  int64  \n"," 1   created_at                    37438 non-null  int64  \n"," 2   default_profile               37438 non-null  bool   \n"," 3   default_profile_image         37438 non-null  bool   \n"," 4   description                   30182 non-null  object \n"," 5   favourites_count              37438 non-null  int64  \n"," 6   followers_count               37438 non-null  int64  \n"," 7   friends_count                 37438 non-null  int64  \n"," 8   geo_enabled                   37438 non-null  bool   \n"," 9   id                            37438 non-null  int64  \n"," 10  lang                          29481 non-null  object \n"," 11  location                      37435 non-null  object \n"," 12  profile_background_image_url  32939 non-null  object \n"," 13  profile_image_url             37437 non-null  object \n"," 14  screen_name                   37438 non-null  object \n"," 15  statuses_count                37438 non-null  int64  \n"," 16  verified                      37438 non-null  bool   \n"," 17  average_tweets_per_day        37438 non-null  float64\n"," 18  account_age_days              37438 non-null  int64  \n"," 19  account_type                  37438 non-null  object \n","dtypes: bool(4), float64(1), int64(8), object(7)\n","memory usage: 4.7+ MB\n"]}]},{"cell_type":"markdown","source":["# Processing the Data"],"metadata":{"id":"r7zPkTmatgzY"}},{"cell_type":"markdown","source":["process data\n","\n","\n","** note, df_str is a stripped down version of the origional dataframe, which removes any text from the learning model due to complications... instead the information is transformed into boolen true and false in 0s and 1s, for the supervised learning algorthims to comprehend and train on. Lastly, the tweet description attribute is broken down based on the number of words in the tweet,,, this is something I would like to vectorize better moving forward."],"metadata":{"id":"ktZblMKora8q"}},{"cell_type":"code","source":["df_str = dataset.copy()\n","\n","df_str"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":704},"id":"tZK5noYRsIB0","executionInfo":{"status":"ok","timestamp":1670268331946,"user_tz":300,"elapsed":16,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"3d505f6a-825d-4b21-8a62-9bb3a2066d72"},"execution_count":313,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0           created_at  default_profile  \\\n","0               0  1476567131000000000            False   \n","1               1  1478667690000000000            False   \n","2               2  1497677667000000000            False   \n","3               3  1469107945000000000             True   \n","4               4  1326645155000000000            False   \n","...           ...                  ...              ...   \n","37433       37433  1249737075000000000             True   \n","37434       37434  1357421737000000000            False   \n","37435       37435  1358186754000000000             True   \n","37436       37436  1347293522000000000            False   \n","37437       37437  1323694768000000000            False   \n","\n","       default_profile_image  \\\n","0                      False   \n","1                      False   \n","2                      False   \n","3                      False   \n","4                      False   \n","...                      ...   \n","37433                  False   \n","37434                  False   \n","37435                  False   \n","37436                  False   \n","37437                  False   \n","\n","                                             description  favourites_count  \\\n","0      Blame @xaiax, Inspired by @MakingInvisible, us...                 4   \n","1      Photographing the American West since 1980. I ...               536   \n","2      Scruffy looking nerf herder and @twitch broadc...              3307   \n","3      Wife.Godmother.Friend.Feline Fanatic! Assistan...              8433   \n","4                   Loan coach at @mancity & Aspiring DJ                88   \n","...                                                  ...               ...   \n","37433  Role: Stock Taker. Past Roles: Nanny, Sales As...               651   \n","37434                    KINGDOM LANDLORD #FreeCornBread              8839   \n","37435  Bienvenid@s al Twitter Oficial de Sergio Dalma...               399   \n","37436  Just a good guy wrapped up in a bad system.\\nA...               967   \n","37437                                              你好！中国              1092   \n","\n","       followers_count  friends_count  geo_enabled                  id   lang  \\\n","0                 1589              4        False  787405734442958848     en   \n","1                  860            880        False  796216118331310080     en   \n","2                  172            594         True  875949740503859204     en   \n","3                  517            633         True  756119643622735875     en   \n","4               753678            116         True           464781334     en   \n","...                ...            ...          ...                 ...    ...   \n","37433              139           1105        False            63963107     en   \n","37434          1121486            605         True          1064042478     en   \n","37435            85630            190        False          1089732602     it   \n","37436              138            166         True           815529979     en   \n","37437                5             39        False           434896892  zh-cn   \n","\n","                      location  \\\n","0                      unknown   \n","1               Estados Unidos   \n","2              Los Angeles, CA   \n","3               Birmingham, AL   \n","4      England, United Kingdom   \n","...                        ...   \n","37433       Kingston Upon Hull   \n","37434                  unknown   \n","37435  En constante movimiento   \n","37436          Los Angeles, CA   \n","37437                       中国   \n","\n","                            profile_background_image_url  \\\n","0       http://abs.twimg.com/images/themes/theme1/bg.png   \n","1       http://abs.twimg.com/images/themes/theme1/bg.png   \n","2       http://abs.twimg.com/images/themes/theme1/bg.png   \n","3                                                    NaN   \n","4       http://abs.twimg.com/images/themes/theme1/bg.png   \n","...                                                  ...   \n","37433   http://abs.twimg.com/images/themes/theme1/bg.png   \n","37434   http://abs.twimg.com/images/themes/theme1/bg.png   \n","37435   http://abs.twimg.com/images/themes/theme1/bg.png   \n","37436  http://abs.twimg.com/images/themes/theme14/bg.gif   \n","37437  http://abs.twimg.com/images/themes/theme19/bg.gif   \n","\n","                                       profile_image_url      screen_name  \\\n","0      http://pbs.twimg.com/profile_images/7874121826...  best_in_dumbest   \n","1      http://pbs.twimg.com/profile_images/8023296328...     CJRubinPhoto   \n","2      http://pbs.twimg.com/profile_images/1278890453...         SVGEGENT   \n","3      http://pbs.twimg.com/profile_images/1284884924...    TinkerVHELPK5   \n","4      http://pbs.twimg.com/profile_images/9952566258...    JoleonLescott   \n","...                                                  ...              ...   \n","37433  http://pbs.twimg.com/profile_images/5844684414...       butchsekab   \n","37434  http://pbs.twimg.com/profile_images/9511349456...      Mathieu_Era   \n","37435  http://pbs.twimg.com/profile_images/1174733822...    SDalmaoficial   \n","37436  http://pbs.twimg.com/profile_images/1265807908...      VinceYearly   \n","37437  http://pbs.twimg.com/profile_images/1688940752...          zhemcom   \n","\n","       statuses_count  verified  average_tweets_per_day  account_age_days  \\\n","0               11041     False                   7.870              1403   \n","1                 252     False                   0.183              1379   \n","2                1001     False                   0.864              1159   \n","3                1324     False                   0.889              1489   \n","4                4202      True                   1.339              3138   \n","...               ...       ...                     ...               ...   \n","37433             340     False                   0.084              4028   \n","37434           24970      True                   8.976              2782   \n","37435            6174      True                   2.226              2773   \n","37436             982     False                   0.339              2899   \n","37437            1563     False                   0.493              3172   \n","\n","      account_type  \n","0              bot  \n","1            human  \n","2            human  \n","3            human  \n","4            human  \n","...            ...  \n","37433        human  \n","37434        human  \n","37435        human  \n","37436        human  \n","37437          bot  \n","\n","[37438 rows x 20 columns]"],"text/html":["\n","  <div id=\"df-46e8f650-e79d-42de-86c6-d97716806c84\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>created_at</th>\n","      <th>default_profile</th>\n","      <th>default_profile_image</th>\n","      <th>description</th>\n","      <th>favourites_count</th>\n","      <th>followers_count</th>\n","      <th>friends_count</th>\n","      <th>geo_enabled</th>\n","      <th>id</th>\n","      <th>lang</th>\n","      <th>location</th>\n","      <th>profile_background_image_url</th>\n","      <th>profile_image_url</th>\n","      <th>screen_name</th>\n","      <th>statuses_count</th>\n","      <th>verified</th>\n","      <th>average_tweets_per_day</th>\n","      <th>account_age_days</th>\n","      <th>account_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1476567131000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Blame @xaiax, Inspired by @MakingInvisible, us...</td>\n","      <td>4</td>\n","      <td>1589</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>787405734442958848</td>\n","      <td>en</td>\n","      <td>unknown</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/7874121826...</td>\n","      <td>best_in_dumbest</td>\n","      <td>11041</td>\n","      <td>False</td>\n","      <td>7.870</td>\n","      <td>1403</td>\n","      <td>bot</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1478667690000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Photographing the American West since 1980. I ...</td>\n","      <td>536</td>\n","      <td>860</td>\n","      <td>880</td>\n","      <td>False</td>\n","      <td>796216118331310080</td>\n","      <td>en</td>\n","      <td>Estados Unidos</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/8023296328...</td>\n","      <td>CJRubinPhoto</td>\n","      <td>252</td>\n","      <td>False</td>\n","      <td>0.183</td>\n","      <td>1379</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1497677667000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Scruffy looking nerf herder and @twitch broadc...</td>\n","      <td>3307</td>\n","      <td>172</td>\n","      <td>594</td>\n","      <td>True</td>\n","      <td>875949740503859204</td>\n","      <td>en</td>\n","      <td>Los Angeles, CA</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/1278890453...</td>\n","      <td>SVGEGENT</td>\n","      <td>1001</td>\n","      <td>False</td>\n","      <td>0.864</td>\n","      <td>1159</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1469107945000000000</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>Wife.Godmother.Friend.Feline Fanatic! Assistan...</td>\n","      <td>8433</td>\n","      <td>517</td>\n","      <td>633</td>\n","      <td>True</td>\n","      <td>756119643622735875</td>\n","      <td>en</td>\n","      <td>Birmingham, AL</td>\n","      <td>NaN</td>\n","      <td>http://pbs.twimg.com/profile_images/1284884924...</td>\n","      <td>TinkerVHELPK5</td>\n","      <td>1324</td>\n","      <td>False</td>\n","      <td>0.889</td>\n","      <td>1489</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1326645155000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Loan coach at @mancity &amp; Aspiring DJ</td>\n","      <td>88</td>\n","      <td>753678</td>\n","      <td>116</td>\n","      <td>True</td>\n","      <td>464781334</td>\n","      <td>en</td>\n","      <td>England, United Kingdom</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/9952566258...</td>\n","      <td>JoleonLescott</td>\n","      <td>4202</td>\n","      <td>True</td>\n","      <td>1.339</td>\n","      <td>3138</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37433</th>\n","      <td>37433</td>\n","      <td>1249737075000000000</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>Role: Stock Taker. Past Roles: Nanny, Sales As...</td>\n","      <td>651</td>\n","      <td>139</td>\n","      <td>1105</td>\n","      <td>False</td>\n","      <td>63963107</td>\n","      <td>en</td>\n","      <td>Kingston Upon Hull</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/5844684414...</td>\n","      <td>butchsekab</td>\n","      <td>340</td>\n","      <td>False</td>\n","      <td>0.084</td>\n","      <td>4028</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>37434</th>\n","      <td>37434</td>\n","      <td>1357421737000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>KINGDOM LANDLORD #FreeCornBread</td>\n","      <td>8839</td>\n","      <td>1121486</td>\n","      <td>605</td>\n","      <td>True</td>\n","      <td>1064042478</td>\n","      <td>en</td>\n","      <td>unknown</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/9511349456...</td>\n","      <td>Mathieu_Era</td>\n","      <td>24970</td>\n","      <td>True</td>\n","      <td>8.976</td>\n","      <td>2782</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>37435</th>\n","      <td>37435</td>\n","      <td>1358186754000000000</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>Bienvenid@s al Twitter Oficial de Sergio Dalma...</td>\n","      <td>399</td>\n","      <td>85630</td>\n","      <td>190</td>\n","      <td>False</td>\n","      <td>1089732602</td>\n","      <td>it</td>\n","      <td>En constante movimiento</td>\n","      <td>http://abs.twimg.com/images/themes/theme1/bg.png</td>\n","      <td>http://pbs.twimg.com/profile_images/1174733822...</td>\n","      <td>SDalmaoficial</td>\n","      <td>6174</td>\n","      <td>True</td>\n","      <td>2.226</td>\n","      <td>2773</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>37436</th>\n","      <td>37436</td>\n","      <td>1347293522000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Just a good guy wrapped up in a bad system.\\nA...</td>\n","      <td>967</td>\n","      <td>138</td>\n","      <td>166</td>\n","      <td>True</td>\n","      <td>815529979</td>\n","      <td>en</td>\n","      <td>Los Angeles, CA</td>\n","      <td>http://abs.twimg.com/images/themes/theme14/bg.gif</td>\n","      <td>http://pbs.twimg.com/profile_images/1265807908...</td>\n","      <td>VinceYearly</td>\n","      <td>982</td>\n","      <td>False</td>\n","      <td>0.339</td>\n","      <td>2899</td>\n","      <td>human</td>\n","    </tr>\n","    <tr>\n","      <th>37437</th>\n","      <td>37437</td>\n","      <td>1323694768000000000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>你好！中国</td>\n","      <td>1092</td>\n","      <td>5</td>\n","      <td>39</td>\n","      <td>False</td>\n","      <td>434896892</td>\n","      <td>zh-cn</td>\n","      <td>中国</td>\n","      <td>http://abs.twimg.com/images/themes/theme19/bg.gif</td>\n","      <td>http://pbs.twimg.com/profile_images/1688940752...</td>\n","      <td>zhemcom</td>\n","      <td>1563</td>\n","      <td>False</td>\n","      <td>0.493</td>\n","      <td>3172</td>\n","      <td>bot</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>37438 rows × 20 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46e8f650-e79d-42de-86c6-d97716806c84')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-46e8f650-e79d-42de-86c6-d97716806c84 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-46e8f650-e79d-42de-86c6-d97716806c84');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":313}]},{"cell_type":"code","source":["# numericify everything\n","\n","#  0 is true / info present\n","#  1 is false/ no info\n","\n","df_str.loc[(df_str.default_profile) == 'false', \"default_profile\" ] = 1\n","df_str.loc[(df_str.default_profile) != 'false', \"default_profile\" ] = 0\n","df_str[\"default_profile\"].astype(np.int64)\n","\n","df_str.loc[(df_str.default_profile_image) == 'false', \"default_profile_image\" ] = 1\n","df_str.loc[(df_str.default_profile_image) != 'false', \"default_profile_image\" ] = 0\n","df_str['default_profile_image'] = pd.Series(df_str['default_profile_image'], dtype=\"int64\")\n","\n","df_str.loc[(df_str.geo_enabled) == 'false', \"geo_enabled\" ] = 1\n","df_str.loc[(df_str.geo_enabled) != 'false', \"geo_enabled\" ] = 0\n","df_str['geo_enabled'] = pd.Series(df_str['geo_enabled'], dtype=\"int64\")\n","\n","\n","df_str.loc[(df_str.lang) == 'en', \"lang\" ] = 0\n","df_str.loc[(df_str.lang) != 'en', \"lang\" ] = 1 \n","df_str['lang'] = pd.Series(df_str['lang'], dtype=\"int64\")\n","\n","\n","df_str.loc[(df_str.verified) == 'false', \"verified\" ] = 1\n","df_str.loc[(df_str.verified) != 'false', \"verified\" ] = 0\n","df_str['verified'] = pd.Series(df_str['verified'], dtype=\"int64\")\n","\n","\n","df_str.loc[(df_str.account_type) == 'bot', \"account_type\" ] = 1\n","df_str.loc[(df_str.account_type) == 'human', \"account_type\" ] = 0\n","df_str['account_type'] = pd.Series(df_str['account_type'], dtype=\"int64\")\n","\n","\n","df_str.loc[(df_str.location) == 'unknown', \"location\" ] = 1\n","df_str.loc[(df_str.location) != 'unknown', \"location\" ] = 0\n","df_str['location'] = pd.Series(df_str['location'], dtype=\"int64\")\n","\n","\n","dataset['description_str'] = dataset['description'].str.split(',') \n","dataset['description_str'] = pd.Series(dataset['description_str'], dtype=\"string\")\n","\n","df_str.loc[(df_str.description) == 'NaN', \"description\" ] = 1\n","df_str.loc[(df_str.description) != 'NaN', \"description\" ] = dataset['description'].apply(lambda x: len(str(x).split(' ')))\n","df_str['description'] = pd.Series(df_str['description'], dtype=\"int64\")\n","\n","\n","\n","df_str.drop(columns=['Unnamed: 0', 'profile_background_image_url', 'profile_image_url', 'id', 'screen_name'], inplace = True, axis =1)\n"],"metadata":{"id":"7oZH8I58qQpm","executionInfo":{"status":"ok","timestamp":1670268334074,"user_tz":300,"elapsed":2141,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":314,"outputs":[]},{"cell_type":"code","source":["# temp to get rid of obj\n","\n","df_str.drop(['default_profile'], inplace = True, axis =1)\n","\n","df_str.sample()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"id":"MoTMBYwK2MK2","executionInfo":{"status":"ok","timestamp":1670268334083,"user_tz":300,"elapsed":153,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"52b07eba-b028-40df-acef-1384f7067311"},"execution_count":315,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                created_at  default_profile_image  description  \\\n","30647  1337814132000000000                      0           25   \n","\n","       favourites_count  followers_count  friends_count  geo_enabled  lang  \\\n","30647            177310            17174          27445            0     1   \n","\n","       location  statuses_count  verified  average_tweets_per_day  \\\n","30647         0          276401         0                  91.858   \n","\n","       account_age_days  account_type  \n","30647              3009             1  "],"text/html":["\n","  <div id=\"df-e2bbfdcf-20d1-430b-8073-05a3a494c437\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>created_at</th>\n","      <th>default_profile_image</th>\n","      <th>description</th>\n","      <th>favourites_count</th>\n","      <th>followers_count</th>\n","      <th>friends_count</th>\n","      <th>geo_enabled</th>\n","      <th>lang</th>\n","      <th>location</th>\n","      <th>statuses_count</th>\n","      <th>verified</th>\n","      <th>average_tweets_per_day</th>\n","      <th>account_age_days</th>\n","      <th>account_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>30647</th>\n","      <td>1337814132000000000</td>\n","      <td>0</td>\n","      <td>25</td>\n","      <td>177310</td>\n","      <td>17174</td>\n","      <td>27445</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>276401</td>\n","      <td>0</td>\n","      <td>91.858</td>\n","      <td>3009</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2bbfdcf-20d1-430b-8073-05a3a494c437')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e2bbfdcf-20d1-430b-8073-05a3a494c437 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e2bbfdcf-20d1-430b-8073-05a3a494c437');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":315}]},{"cell_type":"code","source":["df_str.sample(5)\n","\n","df_str.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1AUglsHItwfR","executionInfo":{"status":"ok","timestamp":1670268334084,"user_tz":300,"elapsed":106,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"6ffb80d7-dabe-4290-86f3-2fec4b8b3b20"},"execution_count":316,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 37438 entries, 0 to 37437\n","Data columns (total 14 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   created_at              37438 non-null  int64  \n"," 1   default_profile_image   37438 non-null  int64  \n"," 2   description             37438 non-null  int64  \n"," 3   favourites_count        37438 non-null  int64  \n"," 4   followers_count         37438 non-null  int64  \n"," 5   friends_count           37438 non-null  int64  \n"," 6   geo_enabled             37438 non-null  int64  \n"," 7   lang                    37438 non-null  int64  \n"," 8   location                37438 non-null  int64  \n"," 9   statuses_count          37438 non-null  int64  \n"," 10  verified                37438 non-null  int64  \n"," 11  average_tweets_per_day  37438 non-null  float64\n"," 12  account_age_days        37438 non-null  int64  \n"," 13  account_type            37438 non-null  int64  \n","dtypes: float64(1), int64(13)\n","memory usage: 4.0 MB\n"]}]},{"cell_type":"code","source":["def text_preprocess(sen): \n","\n","   sen = re.sub('[^a-zA-Z]', ' ', sen)\n","\n","   sen = re.sub(r\"\\s+[a-zA-Z]\\s+\", ' ', sen)\n","\n","   sen = re.sub(r'\\s+', ' ', sen)\n","\n","   return sen\n"," \n","#  code found online... doesnt function as I would like..."],"metadata":{"id":"8tkk-4izc_mD","executionInfo":{"status":"ok","timestamp":1670268334084,"user_tz":300,"elapsed":99,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":317,"outputs":[]},{"cell_type":"code","source":["# X_tweets = []  \n","# messages = list(X)  \n","# for mes in messages:  \n","#     messages[mes] = ' '.join(re.sub(\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t]) |(\\w+:\\/\\/\\S+)\", \" \", mes).split())"],"metadata":{"id":"Xv9dx0ooqZfi","executionInfo":{"status":"ok","timestamp":1670268334085,"user_tz":300,"elapsed":97,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":318,"outputs":[]},{"cell_type":"code","source":["# from tqdm import tqdm\n","\n","# import re\n","# !pip install emoji==1.7\n","# import emoji\n","# import nltk\n","# nltk.download('words')\n","# words = set(nltk.corpus.words.words())\n","\n","\n","# def cleaner(tweet):\n","#     tweet = re.sub(\"@[A-Za-z0-9]+\",\"\",tweet) #Remove @ sign\n","#     tweet = re.sub(r\"(?:\\@|http?\\://|https?\\://|www)\\S+\", \"\", tweet) #Remove http links\n","#     tweet = \" \".join(tweet.split())\n","#     tweet = ''.join(c for c in tweet if c not in emoji.UNICODE_EMOJI) #Remove Emojis\n","#     tweet = tweet.replace(\"#\", \"\").replace(\"_\", \" \") #Remove hashtag sign but keep the text\n","#     tweet = \" \".join(w for w in nltk.wordpunct_tokenize(tweet) \\\n","#          if w.lower() in words or not w.isalpha())\n","#     return tweet\n","\n","\n","\n","# dataset['description_str'] = dataset['description_str'].str.replace(r'[^\\w\\s]+', '')\n","\n","# # dataset['description_str'] = dataset['description_str'].map(lambda x: cleaner(x))\n","\n","# dataset['description_str']=cleaner(dataset['description_str'])"],"metadata":{"id":"3vj9uhx7T-WI","executionInfo":{"status":"ok","timestamp":1670268334085,"user_tz":300,"elapsed":94,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":319,"outputs":[]},{"cell_type":"code","source":["\n","\n","# X.drop(columns=['Unnamed: 0', 'profile_background_image_url', 'profile_image_url', 'screen_name'], inplace=True, axis=1)"],"metadata":{"id":"FHCavG_6c5ZB","executionInfo":{"status":"ok","timestamp":1670268334086,"user_tz":300,"elapsed":92,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":320,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"pI8eXRUJxw85","executionInfo":{"status":"ok","timestamp":1670268334088,"user_tz":300,"elapsed":93,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":320,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"YYsVgqvI8kIe","executionInfo":{"status":"ok","timestamp":1670268334094,"user_tz":300,"elapsed":98,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":320,"outputs":[]},{"cell_type":"code","source":["# import nltk\n","# nltk.download('stopwords')\n","\n","\n","# from nltk.corpus import stopwords  \n","# from sklearn.feature_extraction.text import TfidfVectorizer  \n","  \n","# tfidf = TfidfVectorizer(sublinear_tf=True, min_df=5, norm='l2', encoding='latin-1', ngram_range=(1, 2), stop_words='english')\n","# features = tfidf.fit_transform(dataset.description_str).toarray()\n","# labels = dataset.category_id\n","# features.shape"],"metadata":{"id":"jA36N-6Goydc","executionInfo":{"status":"ok","timestamp":1670268334101,"user_tz":300,"elapsed":104,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":321,"outputs":[]},{"cell_type":"code","source":["\n","# tfidf_vec = TfidfVectorizer (max_features=5000, min_df=50, max_df=0.8, stop_words=stopwords.words('english'))  \n","# X= tfidf_vec.fit_transform(list(dataset['description'])).toarray()"],"metadata":{"id":"KpiOPTVPdD06","executionInfo":{"status":"ok","timestamp":1670268334103,"user_tz":300,"elapsed":105,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":322,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"SiQ4cyMlBrbv"}},{"cell_type":"markdown","source":["# Dataset information statistics and graphics"],"metadata":{"id":"zpEjdmAhtJAE"}},{"cell_type":"markdown","source":["note: the dataset is largely english tweet focused for training..."],"metadata":{"id":"8OJ_E105kHm8"}},{"cell_type":"code","source":["plt.rcParams[\"figure.figsize\"] = [8,10] \n","dataset['lang'].value_counts().plot(kind='pie', autopct='%1.0f%%')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":105},"id":"2LfpHQBmb_CA","executionInfo":{"status":"ok","timestamp":1670268334103,"user_tz":300,"elapsed":103,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"172a2615-0938-4658-e442-62ee43a72450"},"execution_count":323,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f5d81de7070>"]},"metadata":{},"execution_count":323},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x720 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#this may be something to look into more with the new verfied rules"],"metadata":{"id":"CqREn4Sfk8e_","executionInfo":{"status":"ok","timestamp":1670268334104,"user_tz":300,"elapsed":92,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":324,"outputs":[]},{"cell_type":"code","source":["sns.countplot(x='verified', data=dataset, hue = 'account_type')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":105},"id":"ogwras2dcwCS","executionInfo":{"status":"ok","timestamp":1670268334104,"user_tz":300,"elapsed":89,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"89bc2176-7116-4a22-9ea2-f5a78f8f5202"},"execution_count":325,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f5d7ffc4040>"]},"metadata":{},"execution_count":325},{"output_type":"display_data","data":{"text/plain":["<Figure size 576x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Fit and Train Model"],"metadata":{"id":"VsdYSxfFtx8z"}},{"cell_type":"code","source":["# seperate into x and y\n","X = df_str.iloc[:,:-1]\n","y = df_str.iloc[:, -1]"],"metadata":{"id":"-N1VpUzkhuzo","executionInfo":{"status":"ok","timestamp":1670268334104,"user_tz":300,"elapsed":81,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":326,"outputs":[]},{"cell_type":"code","source":["# X.info()\n","\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":483},"id":"cbZQKuKChxg6","executionInfo":{"status":"ok","timestamp":1670268334105,"user_tz":300,"elapsed":79,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"b903e8c9-6f46-43b4-fd12-832bee7e046f"},"execution_count":327,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                created_at  default_profile_image  description  \\\n","0      1476567131000000000                      0           17   \n","1      1478667690000000000                      0           24   \n","2      1497677667000000000                      0            9   \n","3      1469107945000000000                      0            9   \n","4      1326645155000000000                      0            7   \n","...                    ...                    ...          ...   \n","37433  1249737075000000000                      0           20   \n","37434  1357421737000000000                      0            3   \n","37435  1358186754000000000                      0            8   \n","37436  1347293522000000000                      0           16   \n","37437  1323694768000000000                      0            1   \n","\n","       favourites_count  followers_count  friends_count  geo_enabled  lang  \\\n","0                     4             1589              4            0     1   \n","1                   536              860            880            0     1   \n","2                  3307              172            594            0     1   \n","3                  8433              517            633            0     1   \n","4                    88           753678            116            0     1   \n","...                 ...              ...            ...          ...   ...   \n","37433               651              139           1105            0     1   \n","37434              8839          1121486            605            0     1   \n","37435               399            85630            190            0     1   \n","37436               967              138            166            0     1   \n","37437              1092                5             39            0     1   \n","\n","       location  statuses_count  verified  average_tweets_per_day  \\\n","0             0           11041         0                   7.870   \n","1             0             252         0                   0.183   \n","2             0            1001         0                   0.864   \n","3             0            1324         0                   0.889   \n","4             0            4202         0                   1.339   \n","...         ...             ...       ...                     ...   \n","37433         0             340         0                   0.084   \n","37434         0           24970         0                   8.976   \n","37435         0            6174         0                   2.226   \n","37436         0             982         0                   0.339   \n","37437         0            1563         0                   0.493   \n","\n","       account_age_days  \n","0                  1403  \n","1                  1379  \n","2                  1159  \n","3                  1489  \n","4                  3138  \n","...                 ...  \n","37433              4028  \n","37434              2782  \n","37435              2773  \n","37436              2899  \n","37437              3172  \n","\n","[37438 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-838ddc31-804a-4e7f-8db3-c1441f5dc77d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>created_at</th>\n","      <th>default_profile_image</th>\n","      <th>description</th>\n","      <th>favourites_count</th>\n","      <th>followers_count</th>\n","      <th>friends_count</th>\n","      <th>geo_enabled</th>\n","      <th>lang</th>\n","      <th>location</th>\n","      <th>statuses_count</th>\n","      <th>verified</th>\n","      <th>average_tweets_per_day</th>\n","      <th>account_age_days</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1476567131000000000</td>\n","      <td>0</td>\n","      <td>17</td>\n","      <td>4</td>\n","      <td>1589</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11041</td>\n","      <td>0</td>\n","      <td>7.870</td>\n","      <td>1403</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1478667690000000000</td>\n","      <td>0</td>\n","      <td>24</td>\n","      <td>536</td>\n","      <td>860</td>\n","      <td>880</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>252</td>\n","      <td>0</td>\n","      <td>0.183</td>\n","      <td>1379</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1497677667000000000</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>3307</td>\n","      <td>172</td>\n","      <td>594</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1001</td>\n","      <td>0</td>\n","      <td>0.864</td>\n","      <td>1159</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1469107945000000000</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>8433</td>\n","      <td>517</td>\n","      <td>633</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1324</td>\n","      <td>0</td>\n","      <td>0.889</td>\n","      <td>1489</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1326645155000000000</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>88</td>\n","      <td>753678</td>\n","      <td>116</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4202</td>\n","      <td>0</td>\n","      <td>1.339</td>\n","      <td>3138</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37433</th>\n","      <td>1249737075000000000</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>651</td>\n","      <td>139</td>\n","      <td>1105</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>340</td>\n","      <td>0</td>\n","      <td>0.084</td>\n","      <td>4028</td>\n","    </tr>\n","    <tr>\n","      <th>37434</th>\n","      <td>1357421737000000000</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8839</td>\n","      <td>1121486</td>\n","      <td>605</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>24970</td>\n","      <td>0</td>\n","      <td>8.976</td>\n","      <td>2782</td>\n","    </tr>\n","    <tr>\n","      <th>37435</th>\n","      <td>1358186754000000000</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>399</td>\n","      <td>85630</td>\n","      <td>190</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6174</td>\n","      <td>0</td>\n","      <td>2.226</td>\n","      <td>2773</td>\n","    </tr>\n","    <tr>\n","      <th>37436</th>\n","      <td>1347293522000000000</td>\n","      <td>0</td>\n","      <td>16</td>\n","      <td>967</td>\n","      <td>138</td>\n","      <td>166</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>982</td>\n","      <td>0</td>\n","      <td>0.339</td>\n","      <td>2899</td>\n","    </tr>\n","    <tr>\n","      <th>37437</th>\n","      <td>1323694768000000000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1092</td>\n","      <td>5</td>\n","      <td>39</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1563</td>\n","      <td>0</td>\n","      <td>0.493</td>\n","      <td>3172</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>37438 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-838ddc31-804a-4e7f-8db3-c1441f5dc77d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-838ddc31-804a-4e7f-8db3-c1441f5dc77d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-838ddc31-804a-4e7f-8db3-c1441f5dc77d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":327}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9uQWFGcih0m-","executionInfo":{"status":"ok","timestamp":1670268334107,"user_tz":300,"elapsed":67,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"a3d7310c-6225-43cf-ea0c-8ec7bfc56576"},"execution_count":328,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        1\n","1        0\n","2        0\n","3        0\n","4        0\n","        ..\n","37433    0\n","37434    0\n","37435    0\n","37436    0\n","37437    1\n","Name: account_type, Length: 37438, dtype: int64"]},"metadata":{},"execution_count":328}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split \n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)"],"metadata":{"id":"4nhnolf3dQZC","executionInfo":{"status":"ok","timestamp":1670268334108,"user_tz":300,"elapsed":63,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":329,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier \n","\n","\n","rf_clf = RandomForestClassifier(n_estimators=250, random_state=0) \n","rf_clf.fit(X_train, y_train) \n","y_pred = rf_clf.predict(X_test)\n"],"metadata":{"id":"WwciCxj7dTG_","executionInfo":{"status":"ok","timestamp":1670268351789,"user_tz":300,"elapsed":17742,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":330,"outputs":[]},{"cell_type":"code","source":["y_pred"],"metadata":{"id":"WdGVMNE7dnYQ","executionInfo":{"status":"ok","timestamp":1670268351792,"user_tz":300,"elapsed":118,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"50684a69-8cd9-48e1-dfaf-d464df59c5cf"},"execution_count":331,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 0, ..., 0, 0, 1])"]},"metadata":{},"execution_count":331}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, confusion_matrix, accuracy_score \n","\n","print(accuracy_score(y_test,y_pred))\n","\n","print(confusion_matrix(y_test,y_pred)) \n","print(classification_report(y_test,y_pred)) \n","\n","\n","accuracy_score"],"metadata":{"id":"5tN7t3fYdXJW","executionInfo":{"status":"ok","timestamp":1670268351794,"user_tz":300,"elapsed":64,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"952f031f-42a5-494c-9bcf-c636ff8978b3"},"execution_count":332,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8801282051282051\n","[[5917  374]\n"," [ 748 2321]]\n","              precision    recall  f1-score   support\n","\n","           0       0.89      0.94      0.91      6291\n","           1       0.86      0.76      0.81      3069\n","\n","    accuracy                           0.88      9360\n","   macro avg       0.87      0.85      0.86      9360\n","weighted avg       0.88      0.88      0.88      9360\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["<function sklearn.metrics._classification.accuracy_score(y_true, y_pred, *, normalize=True, sample_weight=None)>"]},"metadata":{},"execution_count":332}]},{"cell_type":"code","source":["from sklearn.svm import LinearSVC\n","from sklearn import svm, datasets\n","from sklearn.datasets import make_classification\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import cross_val_score\n","from sklearn.metrics import confusion_matrix\n","import matplotlib.pyplot as plt\n","\n","from sklearn.metrics import classification_report\n","\n","lsvc = LinearSVC()\n","lsvc.dual=False\n","max_iter=1200\n","print(lsvc)\n","\n","print()\n","\n","lsvc.fit(X_train, y_train)\n","score = lsvc.score(X_train, y_train)\n","print(\"Score: \", score)\n","\n","cv_scores = cross_val_score(lsvc, X_train, y_train, cv=10)\n","print(\"CV average score: %.2f\" % cv_scores.mean())\n","\n","ypred = lsvc.predict(X_test)\n","\n","cm = confusion_matrix(y_test, ypred)\n","print(cm)\n","\n","cr = classification_report(y_test, ypred)\n","print(cr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nejqIH607NJK","executionInfo":{"status":"ok","timestamp":1670268352106,"user_tz":300,"elapsed":364,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"63b1b62d-4c4c-4e40-c4c2-b0ab67ab5d15"},"execution_count":333,"outputs":[{"output_type":"stream","name":"stdout","text":["LinearSVC(dual=False)\n","\n","Score:  0.6667853835743287\n","CV average score: 0.67\n","[[6291    0]\n"," [3069    0]]\n","              precision    recall  f1-score   support\n","\n","           0       0.67      1.00      0.80      6291\n","           1       0.00      0.00      0.00      3069\n","\n","    accuracy                           0.67      9360\n","   macro avg       0.34      0.50      0.40      9360\n","weighted avg       0.45      0.67      0.54      9360\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","clf = LogisticRegression(random_state=0).fit(X_train, y_train)\n","clf.fit(X_train, y_train) \n","y_pred = clf.predict(X_test)\n","\n","ypred = clf.predict(X_test)\n","\n","cv_scores = cross_val_score(clf, X_train, y_train, cv=10)\n","print(\"CV average score: %.2f\" % cv_scores.mean())\n","\n","cm = confusion_matrix(y_test, ypred)\n","print(cm)\n","\n","cr = classification_report(y_test, ypred)\n","print(cr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZzKMchBa_EQD","executionInfo":{"status":"ok","timestamp":1670268353464,"user_tz":300,"elapsed":1370,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"19e59b8a-7930-499e-ebe1-45920caab3e5"},"execution_count":334,"outputs":[{"output_type":"stream","name":"stdout","text":["CV average score: 0.67\n","[[6291    0]\n"," [3069    0]]\n","              precision    recall  f1-score   support\n","\n","           0       0.67      1.00      0.80      6291\n","           1       0.00      0.00      0.00      3069\n","\n","    accuracy                           0.67      9360\n","   macro avg       0.34      0.50      0.40      9360\n","weighted avg       0.45      0.67      0.54      9360\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","clf = DecisionTreeClassifier(random_state=0)\n","clf.fit(X_train, y_train) \n","y_pred = clf.predict(X_test)\n","\n","ypred = clf.predict(X_test)\n","\n","cv_scores = cross_val_score(clf, X_train, y_train, cv=10)\n","print(\"CV average score: %.2f\" % cv_scores.mean())\n","\n","cm = confusion_matrix(y_test, ypred)\n","print(cm)\n","\n","cr = classification_report(y_test, ypred)\n","print(cr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"edHnhq7yjjFB","executionInfo":{"status":"ok","timestamp":1670268358144,"user_tz":300,"elapsed":4714,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"be528c8f-dd41-4884-b83f-338da01053ff"},"execution_count":335,"outputs":[{"output_type":"stream","name":"stdout","text":["CV average score: 0.82\n","[[5441  850]\n"," [ 757 2312]]\n","              precision    recall  f1-score   support\n","\n","           0       0.88      0.86      0.87      6291\n","           1       0.73      0.75      0.74      3069\n","\n","    accuracy                           0.83      9360\n","   macro avg       0.80      0.81      0.81      9360\n","weighted avg       0.83      0.83      0.83      9360\n","\n"]}]},{"cell_type":"markdown","source":["**Random Forest Classifier has the highest accuracy**"],"metadata":{"id":"2kIXQ3qcAbIu"}},{"cell_type":"markdown","source":["⚜"],"metadata":{"id":"OB55UljRNiHv"}},{"cell_type":"markdown","source":["# Tweepy Time + More Json Cleaning\n"],"metadata":{"id":"37g5NGErFt8V"}},{"cell_type":"markdown","source":[],"metadata":{"id":"MqspuFMoNk0k"}},{"cell_type":"markdown","source":["some setup first...."],"metadata":{"id":"PUa7kyyI0Qf0"}},{"cell_type":"code","source":["# Before getting started with any code, you need to visit the Twitter API\n","# (https://developer.twitter.com/en) website and...\n","# 1. apply for a developer account\n","# 2. then create an \"project\"\n","# 3. then copy+paste the various keys, secrets, and tokens into the following cell.\n","\n","my_consumer_key = \"zHdTAf14Ry1pmhtITxYSrG5Us\"\n","my_consumer_secret = \"8r7TcS79tbAVlgc1eMxHy02ZJFUXJGNs5QDHxQtjpGC95LAKCa\"\n","\n","my_access_token = \"1143553897497268224-MFdX58P0RP1TkZUukcM3JNVx7zvr5H\"\n","my_access_secret = \"kWgWpfm2HsiQlwWsmyQdWr3O1Lt15CSrWEN9gTshdKBlZ\"\n","\n","my_bearer_token = 'AAAAAAAAAAAAAAAAAAAAALc6jAEAAAAA13Z%2FkK%2B6Eksq0CMQ%2FqtB4Gylei8%3DvfM5e5DR5mTzflchJ8U4Yea5lI0OTBvu1Sk1l42ECfiLOYmv4Z'"],"metadata":{"id":"IdaBAV7P0P_x","executionInfo":{"status":"ok","timestamp":1670268399967,"user_tz":300,"elapsed":53,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":386,"outputs":[]},{"cell_type":"code","source":["# fully installed and overwrites any preexisting installations.\n","\n","!pip install git+https://github.com/tweepy/tweepy.git --upgrade"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KwH_pdCk4qAA","executionInfo":{"status":"ok","timestamp":1670268406224,"user_tz":300,"elapsed":4884,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"8ba89b53-e7d0-4f75-87a4-2ebc71dfaf7e"},"execution_count":387,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting git+https://github.com/tweepy/tweepy.git\n","  Cloning https://github.com/tweepy/tweepy.git to /tmp/pip-req-build-7oh8jbsz\n","  Running command git clone -q https://github.com/tweepy/tweepy.git /tmp/pip-req-build-7oh8jbsz\n","Requirement already satisfied: oauthlib<4,>=3.2.0 in /usr/local/lib/python3.8/dist-packages (from tweepy==4.12.1) (3.2.2)\n","Requirement already satisfied: requests<3,>=2.27.0 in /usr/local/lib/python3.8/dist-packages (from tweepy==4.12.1) (2.28.1)\n","Requirement already satisfied: requests-oauthlib<2,>=1.2.0 in /usr/local/lib/python3.8/dist-packages (from tweepy==4.12.1) (1.3.1)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.27.0->tweepy==4.12.1) (2.10)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.27.0->tweepy==4.12.1) (1.24.3)\n","Requirement already satisfied: charset-normalizer<3,>=2 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.27.0->tweepy==4.12.1) (2.1.1)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.27.0->tweepy==4.12.1) (2022.9.24)\n"]}]},{"cell_type":"code","source":["# Import the tweepy package\n","import tweepy\n","\n","# Import a variety of other packages that may be useful for working with data.\n","import pandas as pd\n","import json\n","import time"],"metadata":{"id":"CmZ5uSSw4tGG","executionInfo":{"status":"ok","timestamp":1670268406226,"user_tz":300,"elapsed":128,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":388,"outputs":[]},{"cell_type":"code","source":["# Using the tweepy.Client(...) function, you can establish a connection to the \n","# Twitter API.  The example below shows a robust way of creating a \"client\" object\n","#  by passing your credentials to appropriate parameters.\n","\n","# Additionally, the \"wait_on_rate_limit\" parameter is set to True at this stage.\n","# This will be explained more later, but this helps to overcome a lot of errors\n","#  associated with API usage limitations.\n","\n","client = tweepy.Client(\n","    wait_on_rate_limit = True,\n","    consumer_key = my_consumer_key,\n","    consumer_secret = my_consumer_secret,\n","    access_token = my_access_token,\n","    access_token_secret = my_access_secret,\n","    bearer_token = my_bearer_token,\n",")"],"metadata":{"id":"hrnXusas4ylq","executionInfo":{"status":"ok","timestamp":1670268406228,"user_tz":300,"elapsed":93,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":389,"outputs":[]},{"cell_type":"code","source":["# Test to make sure the client object exists\n","\n","client"],"metadata":{"id":"_oKW9AHv41tb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670268406228,"user_tz":300,"elapsed":88,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"fe53758b-5a29-4ae6-af23-ad6f30ddf1d1"},"execution_count":390,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tweepy.client.Client at 0x7f5d80f05640>"]},"metadata":{},"execution_count":390}]},{"cell_type":"code","source":["data_tweets = pd.DataFrame()\n","\n","# for i in users_group.data:\n","#   temp_data = pd.json_normalize( i.data ,  sep = \"_\")\n","#   data_tweets = data_tweets.append( temp_data , ignore_index=True )"],"metadata":{"id":"o2CPqhRxKOmB","executionInfo":{"status":"ok","timestamp":1670268406229,"user_tz":300,"elapsed":79,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":391,"outputs":[]},{"cell_type":"code","source":["data_tweets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":96},"id":"y6jPKkFbKY-E","executionInfo":{"status":"ok","timestamp":1670268406231,"user_tz":300,"elapsed":77,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"4f0b6c82-f9fd-499c-d676-a84b18a00c21"},"execution_count":392,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: []\n","Index: []"],"text/html":["\n","  <div id=\"df-1c10c16e-c636-4780-96bd-359288275cac\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c10c16e-c636-4780-96bd-359288275cac')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1c10c16e-c636-4780-96bd-359288275cac button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1c10c16e-c636-4780-96bd-359288275cac');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":392}]},{"cell_type":"markdown","source":["0    created_at              37438 non-null  int64  \n"," 1   default_profile_image   37438 non-null  int64  \n"," 2   description             37438 non-null  int64  \n"," 3   favourites_count        37438 non-null  int64  \n"," 4   followers_count         37438 non-null  int64  \n"," 5   friends_count           37438 non-null  int64  \n"," 6   geo_enabled             37438 non-null  int64  \n"," 7   id                      37438 non-null  int64  \n"," 8   lang                    37438 non-null  int64  \n"," 9   location                37438 non-null  int64  \n"," 10  statuses_count          37438 non-null  int64  \n"," 11  verified                37438 non-null  int64  \n"," 12  average_tweets_per_day  37438 non-null  float64\n"," 13  account_age_days        37438 non-null  int64  "],"metadata":{"id":"U486Jo2x7dbQ"}},{"cell_type":"code","source":["# users_group = client.search_recent_tweets(query= \"help\", )\n","query = QUERY1\n","tweets = client.search_recent_tweets(query=query, tweet_fields=['lang', 'geo'], expansions=[ 'author_id', 'geo.place_id'], user_fields=[ 'created_at', 'profile_image_url', 'description', 'name',\"public_metrics\", 'verified', 'location'], place_fields = ['country','country_code'], max_results=100)\n","\n","convo_tweets = pd.DataFrame()\n","\n","for i in tweets.data:\n","  temp_data = pd.json_normalize( i.data ,  sep = \"_\")\n","  convo_tweets = convo_tweets.append( temp_data , ignore_index=True )\n","\n","\n","\n","convo_tweets.drop(columns=['id'], inplace = True, axis =1)\n","\n"],"metadata":{"id":"cLrAIqhd9uAP","executionInfo":{"status":"ok","timestamp":1670268406235,"user_tz":300,"elapsed":54,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":393,"outputs":[]},{"cell_type":"code","source":["# convo_tweets.info()"],"metadata":{"id":"FPMdX02Q-dt0","executionInfo":{"status":"ok","timestamp":1670268406235,"user_tz":300,"elapsed":53,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":394,"outputs":[]},{"cell_type":"code","source":["# convo_tweets.sample(10)"],"metadata":{"id":"zaG6vB2p-syJ","executionInfo":{"status":"ok","timestamp":1670268406236,"user_tz":300,"elapsed":53,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":395,"outputs":[]},{"cell_type":"code","source":["convo_tweets['author_id'] = pd.Series(convo_tweets['author_id'], dtype=\"string\")\n","\n","ids=list(convo_tweets['author_id'].copy())\n","\n","users_group = client.get_users(\n","     ids= ids, user_fields = [\"created_at\", \"description\",\"profile_image_url\",\"public_metrics\",\"verified\",\"location\"])\n","\n","\n","data_users = pd.DataFrame()\n","\n","for i in users_group.data:\n","  temp_data = pd.json_normalize( i.data ,  sep = \"_\")\n","  data_users = data_users.append( temp_data , ignore_index=True )\n","  # convo_tweets = convo_tweets.append( temp_data , ignore_index=True )\n"],"metadata":{"id":"NR28c1MaBGOS","executionInfo":{"status":"ok","timestamp":1670268406904,"user_tz":300,"elapsed":719,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":396,"outputs":[]},{"cell_type":"code","source":["# users_group.data"],"metadata":{"id":"eIyA5mhoC8UN","executionInfo":{"status":"ok","timestamp":1670268406907,"user_tz":300,"elapsed":87,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":397,"outputs":[]},{"cell_type":"code","source":["# result = pd.concat([data_users, convo_tweets], axis=1)"],"metadata":{"id":"ocCd_PCXUB2n","executionInfo":{"status":"ok","timestamp":1670268406909,"user_tz":300,"elapsed":70,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":398,"outputs":[]},{"cell_type":"code","source":["data_users.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZQZ8iqYzDWdz","executionInfo":{"status":"ok","timestamp":1670268406909,"user_tz":300,"elapsed":67,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"446581b7-4605-49b5-d506-2bf7b5bcd54f"},"execution_count":399,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 100 entries, 0 to 99\n","Data columns (total 12 columns):\n"," #   Column                          Non-Null Count  Dtype \n","---  ------                          --------------  ----- \n"," 0   profile_image_url               100 non-null    object\n"," 1   created_at                      100 non-null    object\n"," 2   verified                        100 non-null    bool  \n"," 3   username                        100 non-null    object\n"," 4   description                     100 non-null    object\n"," 5   name                            100 non-null    object\n"," 6   id                              100 non-null    object\n"," 7   public_metrics_followers_count  100 non-null    int64 \n"," 8   public_metrics_following_count  100 non-null    int64 \n"," 9   public_metrics_tweet_count      100 non-null    int64 \n"," 10  public_metrics_listed_count     100 non-null    int64 \n"," 11  location                        44 non-null     object\n","dtypes: bool(1), int64(4), object(7)\n","memory usage: 8.8+ KB\n"]}]},{"cell_type":"code","source":["convo_tweets.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iEQnR3_CHHEM","executionInfo":{"status":"ok","timestamp":1670268406911,"user_tz":300,"elapsed":63,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"e6b0d3af-a8bd-495f-f473-a4474a1943c1"},"execution_count":400,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 100 entries, 0 to 99\n","Data columns (total 4 columns):\n"," #   Column                  Non-Null Count  Dtype \n","---  ------                  --------------  ----- \n"," 0   lang                    100 non-null    object\n"," 1   author_id               100 non-null    string\n"," 2   edit_history_tweet_ids  100 non-null    object\n"," 3   text                    100 non-null    object\n","dtypes: object(3), string(1)\n","memory usage: 3.2+ KB\n"]}]},{"cell_type":"code","source":["import tweepy\n","\n","my_consumer_key = \"zHdTAf14Ry1pmhtITxYSrG5Us\"\n","my_consumer_secret = \"8r7TcS79tbAVlgc1eMxHy02ZJFUXJGNs5QDHxQtjpGC95LAKCa\"\n","\n","my_access_token = \"1143553897497268224-MFdX58P0RP1TkZUukcM3JNVx7zvr5H\"\n","my_access_secret = \"kWgWpfm2HsiQlwWsmyQdWr3O1Lt15CSrWEN9gTshdKBlZ\"\n","\n","\n","auth = tweepy.OAuthHandler(my_consumer_key, my_consumer_secret)\n","auth.set_access_token(my_access_token, my_access_secret)\n","\n","api = tweepy.API(auth)"],"metadata":{"id":"bdwOVArwPwVH","executionInfo":{"status":"ok","timestamp":1670268406912,"user_tz":300,"elapsed":38,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":401,"outputs":[]},{"cell_type":"code","source":["liked_tweets = api.get_favorites(user_id = ids, count =100)\n","\n","# liked_tweets2 = api.get_favorites(user_id = secondid)"],"metadata":{"id":"iw2rCyf-RIhO","executionInfo":{"status":"ok","timestamp":1670268407386,"user_tz":300,"elapsed":501,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":402,"outputs":[]},{"cell_type":"code","source":["# liked_tweets"],"metadata":{"id":"E50Nmol7ubOT","executionInfo":{"status":"ok","timestamp":1670268407389,"user_tz":300,"elapsed":225,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":403,"outputs":[]},{"cell_type":"code","source":["# for status in liked_tweets:\n","#     print(status.user.favourites_count)\n","\n","# print(\"start part 2\")\n","\n","# for status2 in liked_tweets2:\n","#     print(status2.user.favourites_count)"],"metadata":{"id":"LYQPgfOmTZZM","executionInfo":{"status":"ok","timestamp":1670268407390,"user_tz":300,"elapsed":156,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":404,"outputs":[]},{"cell_type":"code","source":["output = []\n","for tweet in liked_tweets:\n","    favourite_count = tweet.favorite_count\n","    geo_enabled = tweet.geo\n","    friends_count = tweet.user.friends_count \n","    \n","    line = { 'favourite_count' : favourite_count, 'friends_count': friends_count, 'geo_enabled' : geo_enabled }\n","    \n","    output.append(line)"],"metadata":{"id":"yryySSWnSg8N","executionInfo":{"status":"ok","timestamp":1670268407391,"user_tz":300,"elapsed":146,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":405,"outputs":[]},{"cell_type":"code","source":["# output"],"metadata":{"id":"KS4S0g7BSwl6","executionInfo":{"status":"ok","timestamp":1670268407393,"user_tz":300,"elapsed":106,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":406,"outputs":[]},{"cell_type":"code","source":["likesper_users = pd.DataFrame(output)\n","\n","result = pd.concat([data_users, convo_tweets, likesper_users], axis=1)\n","\n","# convo_tweets = convo_tweets.append(output , ignore_index=True )\n","\n"],"metadata":{"id":"FxHexwQVS0J-","executionInfo":{"status":"ok","timestamp":1670268407395,"user_tz":300,"elapsed":92,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":407,"outputs":[]},{"cell_type":"code","source":["# likesper_users"],"metadata":{"id":"1fJWKi1iRxMC","executionInfo":{"status":"ok","timestamp":1670268407398,"user_tz":300,"elapsed":83,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":408,"outputs":[]},{"cell_type":"code","source":["# result.info()"],"metadata":{"id":"qY_4699bTTsj","executionInfo":{"status":"ok","timestamp":1670268407399,"user_tz":300,"elapsed":83,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":409,"outputs":[]},{"cell_type":"code","source":["result.sample(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":763},"id":"mersoxCYapJ4","executionInfo":{"status":"ok","timestamp":1670268407400,"user_tz":300,"elapsed":80,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"4b52e918-3fba-4f47-8206-20423b8129c6"},"execution_count":410,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                    profile_image_url  \\\n","39  https://pbs.twimg.com/profile_images/158933258...   \n","64  https://pbs.twimg.com/profile_images/129969522...   \n","31  https://pbs.twimg.com/profile_images/159469706...   \n","81  https://pbs.twimg.com/profile_images/894948387...   \n","48  https://pbs.twimg.com/profile_images/159303037...   \n","5   https://pbs.twimg.com/profile_images/150335615...   \n","51  https://pbs.twimg.com/profile_images/159056438...   \n","44  https://pbs.twimg.com/profile_images/158781848...   \n","68  https://pbs.twimg.com/profile_images/157617746...   \n","96  https://pbs.twimg.com/profile_images/157054509...   \n","\n","                  created_at  verified        username  \\\n","39  2015-11-20T03:33:02.000Z     False    kurzedificio   \n","64  2019-11-09T15:58:37.000Z     False    MovieLogbook   \n","31  2016-08-21T05:50:26.000Z     False       Ivett1222   \n","81  2017-08-08T15:37:15.000Z     False      TommyAlan2   \n","48  2011-05-13T00:09:28.000Z     False      giuliano44   \n","5   2021-08-17T08:17:35.000Z     False   Aseez27547543   \n","51  2012-06-06T14:33:03.000Z     False    MooSiyeonMoo   \n","44  2020-04-18T11:38:44.000Z     False  icomefrommars2   \n","68  2021-09-05T04:57:55.000Z     False     JJselena873   \n","96  2021-06-09T13:40:53.000Z     False        Cager_CA   \n","\n","                                          description  \\\n","39  she/her bi🌈 | fan acct ~ ia | MAMAMထ 容:FACE🍯 W...   \n","64  Tv + Movie News and recommendations . Follow m...   \n","31  She/Her| MMM 🐮| MB bias 🐹💫| ID Firebreather 🔥|...   \n","81                duniaku bumi manusia dan seisinya 🔥   \n","48  Fan del Yuri~\\nNeverland-Moomoo-Plory-Diadem-G...   \n","5                                                Ywna   \n","51                              DREAMCATCHER, MAMAMOO   \n","44  Be your own hero.                             ...   \n","68  Yoongi outsold. I am his legal toe nail clippe...   \n","96  Vat grown antifa supersoldier from a George So...   \n","\n","                             name                   id  \\\n","39          ❖ kurz ❖ MY CON 🎙️🌎✈️           4296731294   \n","64       Ender's Movie Logbook ↙️  1193196165610823681   \n","31  Absence🌻|HappyByulDaySoon~❄️🌙   767237400783388681   \n","81                     Tommy Alan   894945607894179840   \n","48                         Shiimy            297713331   \n","5                           Aseez  1427545093582381058   \n","51                     ☀️ || 👩🏼‍💻            601098036   \n","44            sem break is coming  1251475214518464513   \n","68             ʏᴏᴏɴɢɪ's ʙʀᴇᴀᴅ-ᴇɴᴅ  1434380179703541760   \n","96                          Cager  1402621686378270720   \n","\n","    public_metrics_followers_count  public_metrics_following_count  \\\n","39                             632                            1532   \n","64                            9947                             280   \n","31                             171                             249   \n","81                             306                             555   \n","48                             124                             288   \n","5                               19                              90   \n","51                             328                             281   \n","44                             204                            1177   \n","68                               7                             312   \n","96                              20                              63   \n","\n","    public_metrics_tweet_count  public_metrics_listed_count  \\\n","39                      133797                            8   \n","64                        5646                           15   \n","31                       13565                            2   \n","81                        5580                            0   \n","48                        6990                            0   \n","5                           17                            0   \n","51                       46406                            2   \n","44                       10141                            0   \n","68                         448                            0   \n","96                        4394                            0   \n","\n","                  location lang            author_id edit_history_tweet_ids  \\\n","39      California, USA 🇭🇳   en           4296731294  [1599324130406694914]   \n","64                     NaN   en  1193196165610823681  [1599168170082045952]   \n","31                     NaN   en   767237400783388681  [1599453726166564864]   \n","81  Tulungagung, Indonesia   in   894945607894179840  [1599088457757835269]   \n","48  Buenos Aires-Argentina  qam            297713331  [1599232642255179776]   \n","5                      NaN   en  1427545093582381058  [1599789439076618241]   \n","51               She/Her 🌈  und            601098036  [1599224690127405056]   \n","44                     NaN   en  1251475214518464513  [1599261918568787969]   \n","68                     NaN   en  1434380179703541760  [1599156408905179136]   \n","96                     NaN   en  1402621686378270720  [1599056592254603264]   \n","\n","                                                 text  favourite_count  \\\n","39                         @revisi_final No problem 🫶             15.0   \n","64  @wheein_shi @wheeix Check out this UFO from So...           3472.0   \n","31  @oenwoong168 @wheeix Its Pink Cloud from her l...         102530.0   \n","81                  @wheeix Ini kamu @senjatanuklir ?              1.0   \n","48                                @wheeix @mat_rayito              1.0   \n","5                @wheeix please get out from football             12.0   \n","51                                         @wheeix 😳🥵             30.0   \n","44                               @wheeix 100k lets go         713003.0   \n","68                       @wheeix SHE WAS THERE? OMGGG              1.0   \n","96  @wheeix Wheein THE SHOOTER https://t.co/3XdIO0...          13414.0   \n","\n","    friends_count geo_enabled  \n","39          140.0        None  \n","64          416.0        None  \n","31          180.0        None  \n","81          548.0        None  \n","48          129.0        None  \n","5           878.0        None  \n","51          489.0        None  \n","44         5750.0        None  \n","68          507.0        None  \n","96            1.0        None  "],"text/html":["\n","  <div id=\"df-a96eeda2-2d8c-4874-8f22-7153b7024387\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>profile_image_url</th>\n","      <th>created_at</th>\n","      <th>verified</th>\n","      <th>username</th>\n","      <th>description</th>\n","      <th>name</th>\n","      <th>id</th>\n","      <th>public_metrics_followers_count</th>\n","      <th>public_metrics_following_count</th>\n","      <th>public_metrics_tweet_count</th>\n","      <th>public_metrics_listed_count</th>\n","      <th>location</th>\n","      <th>lang</th>\n","      <th>author_id</th>\n","      <th>edit_history_tweet_ids</th>\n","      <th>text</th>\n","      <th>favourite_count</th>\n","      <th>friends_count</th>\n","      <th>geo_enabled</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>39</th>\n","      <td>https://pbs.twimg.com/profile_images/158933258...</td>\n","      <td>2015-11-20T03:33:02.000Z</td>\n","      <td>False</td>\n","      <td>kurzedificio</td>\n","      <td>she/her bi🌈 | fan acct ~ ia | MAMAMထ 容:FACE🍯 W...</td>\n","      <td>❖ kurz ❖ MY CON 🎙️🌎✈️</td>\n","      <td>4296731294</td>\n","      <td>632</td>\n","      <td>1532</td>\n","      <td>133797</td>\n","      <td>8</td>\n","      <td>California, USA 🇭🇳</td>\n","      <td>en</td>\n","      <td>4296731294</td>\n","      <td>[1599324130406694914]</td>\n","      <td>@revisi_final No problem 🫶</td>\n","      <td>15.0</td>\n","      <td>140.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>https://pbs.twimg.com/profile_images/129969522...</td>\n","      <td>2019-11-09T15:58:37.000Z</td>\n","      <td>False</td>\n","      <td>MovieLogbook</td>\n","      <td>Tv + Movie News and recommendations . Follow m...</td>\n","      <td>Ender's Movie Logbook ↙️</td>\n","      <td>1193196165610823681</td>\n","      <td>9947</td>\n","      <td>280</td>\n","      <td>5646</td>\n","      <td>15</td>\n","      <td>NaN</td>\n","      <td>en</td>\n","      <td>1193196165610823681</td>\n","      <td>[1599168170082045952]</td>\n","      <td>@wheein_shi @wheeix Check out this UFO from So...</td>\n","      <td>3472.0</td>\n","      <td>416.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>https://pbs.twimg.com/profile_images/159469706...</td>\n","      <td>2016-08-21T05:50:26.000Z</td>\n","      <td>False</td>\n","      <td>Ivett1222</td>\n","      <td>She/Her| MMM 🐮| MB bias 🐹💫| ID Firebreather 🔥|...</td>\n","      <td>Absence🌻|HappyByulDaySoon~❄️🌙</td>\n","      <td>767237400783388681</td>\n","      <td>171</td>\n","      <td>249</td>\n","      <td>13565</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>en</td>\n","      <td>767237400783388681</td>\n","      <td>[1599453726166564864]</td>\n","      <td>@oenwoong168 @wheeix Its Pink Cloud from her l...</td>\n","      <td>102530.0</td>\n","      <td>180.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>https://pbs.twimg.com/profile_images/894948387...</td>\n","      <td>2017-08-08T15:37:15.000Z</td>\n","      <td>False</td>\n","      <td>TommyAlan2</td>\n","      <td>duniaku bumi manusia dan seisinya 🔥</td>\n","      <td>Tommy Alan</td>\n","      <td>894945607894179840</td>\n","      <td>306</td>\n","      <td>555</td>\n","      <td>5580</td>\n","      <td>0</td>\n","      <td>Tulungagung, Indonesia</td>\n","      <td>in</td>\n","      <td>894945607894179840</td>\n","      <td>[1599088457757835269]</td>\n","      <td>@wheeix Ini kamu @senjatanuklir ?</td>\n","      <td>1.0</td>\n","      <td>548.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>https://pbs.twimg.com/profile_images/159303037...</td>\n","      <td>2011-05-13T00:09:28.000Z</td>\n","      <td>False</td>\n","      <td>giuliano44</td>\n","      <td>Fan del Yuri~\\nNeverland-Moomoo-Plory-Diadem-G...</td>\n","      <td>Shiimy</td>\n","      <td>297713331</td>\n","      <td>124</td>\n","      <td>288</td>\n","      <td>6990</td>\n","      <td>0</td>\n","      <td>Buenos Aires-Argentina</td>\n","      <td>qam</td>\n","      <td>297713331</td>\n","      <td>[1599232642255179776]</td>\n","      <td>@wheeix @mat_rayito</td>\n","      <td>1.0</td>\n","      <td>129.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>https://pbs.twimg.com/profile_images/150335615...</td>\n","      <td>2021-08-17T08:17:35.000Z</td>\n","      <td>False</td>\n","      <td>Aseez27547543</td>\n","      <td>Ywna</td>\n","      <td>Aseez</td>\n","      <td>1427545093582381058</td>\n","      <td>19</td>\n","      <td>90</td>\n","      <td>17</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>en</td>\n","      <td>1427545093582381058</td>\n","      <td>[1599789439076618241]</td>\n","      <td>@wheeix please get out from football</td>\n","      <td>12.0</td>\n","      <td>878.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>https://pbs.twimg.com/profile_images/159056438...</td>\n","      <td>2012-06-06T14:33:03.000Z</td>\n","      <td>False</td>\n","      <td>MooSiyeonMoo</td>\n","      <td>DREAMCATCHER, MAMAMOO</td>\n","      <td>☀️ || 👩🏼‍💻</td>\n","      <td>601098036</td>\n","      <td>328</td>\n","      <td>281</td>\n","      <td>46406</td>\n","      <td>2</td>\n","      <td>She/Her 🌈</td>\n","      <td>und</td>\n","      <td>601098036</td>\n","      <td>[1599224690127405056]</td>\n","      <td>@wheeix 😳🥵</td>\n","      <td>30.0</td>\n","      <td>489.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>https://pbs.twimg.com/profile_images/158781848...</td>\n","      <td>2020-04-18T11:38:44.000Z</td>\n","      <td>False</td>\n","      <td>icomefrommars2</td>\n","      <td>Be your own hero.                             ...</td>\n","      <td>sem break is coming</td>\n","      <td>1251475214518464513</td>\n","      <td>204</td>\n","      <td>1177</td>\n","      <td>10141</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>en</td>\n","      <td>1251475214518464513</td>\n","      <td>[1599261918568787969]</td>\n","      <td>@wheeix 100k lets go</td>\n","      <td>713003.0</td>\n","      <td>5750.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>https://pbs.twimg.com/profile_images/157617746...</td>\n","      <td>2021-09-05T04:57:55.000Z</td>\n","      <td>False</td>\n","      <td>JJselena873</td>\n","      <td>Yoongi outsold. I am his legal toe nail clippe...</td>\n","      <td>ʏᴏᴏɴɢɪ's ʙʀᴇᴀᴅ-ᴇɴᴅ</td>\n","      <td>1434380179703541760</td>\n","      <td>7</td>\n","      <td>312</td>\n","      <td>448</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>en</td>\n","      <td>1434380179703541760</td>\n","      <td>[1599156408905179136]</td>\n","      <td>@wheeix SHE WAS THERE? OMGGG</td>\n","      <td>1.0</td>\n","      <td>507.0</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>https://pbs.twimg.com/profile_images/157054509...</td>\n","      <td>2021-06-09T13:40:53.000Z</td>\n","      <td>False</td>\n","      <td>Cager_CA</td>\n","      <td>Vat grown antifa supersoldier from a George So...</td>\n","      <td>Cager</td>\n","      <td>1402621686378270720</td>\n","      <td>20</td>\n","      <td>63</td>\n","      <td>4394</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>en</td>\n","      <td>1402621686378270720</td>\n","      <td>[1599056592254603264]</td>\n","      <td>@wheeix Wheein THE SHOOTER https://t.co/3XdIO0...</td>\n","      <td>13414.0</td>\n","      <td>1.0</td>\n","      <td>None</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a96eeda2-2d8c-4874-8f22-7153b7024387')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a96eeda2-2d8c-4874-8f22-7153b7024387 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a96eeda2-2d8c-4874-8f22-7153b7024387');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":410}]},{"cell_type":"markdown","source":["# Clean Dataset and make comparable to before"],"metadata":{"id":"5BhEGKhOeDTt"}},{"cell_type":"markdown","source":["<!-- gotta be like before lol -->\n","\n","reorder\n","\n","shift everything into bits from true false"],"metadata":{"id":"J-iAoXHNeKBp"}},{"cell_type":"code","source":["result.insert(0, 'created_at', result.pop('created_at'))"],"metadata":{"id":"d-sQHigMb5B-","executionInfo":{"status":"ok","timestamp":1670268413573,"user_tz":300,"elapsed":192,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":411,"outputs":[]},{"cell_type":"code","source":["from datetime import datetime\n","\n","# for date in d\n","result['created_at'] = pd.to_numeric(pd.to_datetime(dataset['created_at']))\n","result['days_created'] = (pd.to_datetime(result['created_at'], format='%Y/%m/%d')-(pd.to_datetime('2022/12/1', format='%Y/%m/%d'))).dt.days * -1\n","\n","\n","# result['created_at'] = pd.to_numeric(pd.to_datetime(dataset['created_at']))"],"metadata":{"id":"UXl6tf81kfrg","executionInfo":{"status":"ok","timestamp":1670268413788,"user_tz":300,"elapsed":40,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":412,"outputs":[]},{"cell_type":"code","source":["result ['average_tweets_per_day'] = result['public_metrics_tweet_count']/result['days_created']"],"metadata":{"id":"CGEJK_e7p9K_","executionInfo":{"status":"ok","timestamp":1670268413792,"user_tz":300,"elapsed":38,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":413,"outputs":[]},{"cell_type":"code","source":["# result['days_created'].sample(2)"],"metadata":{"id":"GMX4u1wKlVTR","executionInfo":{"status":"ok","timestamp":1670268413793,"user_tz":300,"elapsed":37,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":414,"outputs":[]},{"cell_type":"code","source":["# result.sample()"],"metadata":{"id":"sRZ4Kutey84L","executionInfo":{"status":"ok","timestamp":1670268413797,"user_tz":300,"elapsed":40,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":415,"outputs":[]},{"cell_type":"markdown","source":["<!-- 'http://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png' -->"],"metadata":{"id":"7Hnnd8CVIINn"}},{"cell_type":"code","source":["# result.location.sample(10)"],"metadata":{"id":"O6yr9fEtcCUx","executionInfo":{"status":"ok","timestamp":1670268414092,"user_tz":300,"elapsed":333,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":416,"outputs":[]},{"cell_type":"code","source":["# numericify everything\n","\n","#  0 is true / info present\n","#  1 is false/ no info\n","\n","result.loc[(result.profile_image_url) != 'http://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png', \"default_profile_image\" ] = 0\n","result.loc[(result.profile_image_url) == 'http://abs.twimg.com/sticky/default_profile_images/default_profile_normal.png', \"default_profile_image\" ] = 1\n","result['default_profile_image'] = pd.Series(df_str['default_profile_image'], dtype=\"int64\")\n","\n","\n","result.loc[(result.description) == 'NaN', \"description\" ] = 0\n","result.loc[(result.description) != 'NaN', \"description\" ] = dataset['description'].apply(lambda x: len(str(x).split(' ')))\n","result['description'] = pd.Series(result['description'], dtype=\"int64\")\n","\n","\n","# result.loc[(result.default_profile_image) == '0' ,\"default_profile\" ] = 0\n","# result.loc[(result.default_profile_image) == '1', \"default_profile\" ] = 1\n","# result.loc[(result.description) !=0, \"default_profile\" ] = 1\n","# result['default_profile'] = pd.Series(result['default_profile'], dtype=\"int64\")\n","\n","\n","result.loc[(result.geo_enabled) == 'None', \"geo_enabled\" ] = 1\n","result.loc[(result.geo_enabled) != 'None', \"geo_enabled\" ] = 0\n","result.loc[(result.geo_enabled) == 'NaN', \"geo_enabled\" ] = 0\n","\n","result['geo_enabled'] = pd.Series(result['geo_enabled'], dtype=\"int64\")\n","\n","\n","result.loc[(result.lang) == 'en', \"lang\" ] = 0\n","result.loc[(result.lang) != 'en', \"lang\" ] = 1 \n","result['lang'] = pd.Series(result['lang'], dtype=\"int64\")\n","\n","\n","result.loc[(result.verified) == 'false', \"verified\" ] = 1\n","result.loc[(result.verified) != 'false', \"verified\" ] = 0\n","result['verified'] = pd.Series(result['verified'], dtype=\"int64\")\n","\n","\n","result.loc[(result.location) == 'NaN', \"location\" ] = 1\n","result.loc[(result.location) != 'NaN', \"location\" ] = 0\n","result['location'] = pd.Series(result['location'], dtype=\"int64\")\n","\n","result.loc[(result.favourite_count) == 'NaN', \"favourite_count\" ] = 0\n","result.loc[(result.friends_count) == 'NaN', \"friends_count\" ] = 0\n","\n","\n","\n","\n","# dataset['description_str'] = dataset['description'].str.split(',') \n","# dataset['description_str'] = pd.Series(dataset['description_str'], dtype=\"string\")\n","\n","# result.loc[(result.description) == 'NaN', \"description\" ] = 1\n","# result.loc[(result.description) != 'NaN', \"description\" ] = dataset['description'].apply(lambda x: len(str(x).split(' ')))\n","# result['description'] = pd.Series(result['description'], dtype=\"int64\")\n","\n","\n","\n","result.drop(columns=['username', 'name', 'text', 'edit_history_tweet_ids', 'profile_image_url','author_id', 'id', 'public_metrics_following_count', 'public_metrics_listed_count' ], inplace = True, axis =1)\n"],"metadata":{"id":"swfq1lyezuOc","executionInfo":{"status":"ok","timestamp":1670268414093,"user_tz":300,"elapsed":124,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":417,"outputs":[]},{"cell_type":"code","source":["# reorder cols for model\n","\n","result.insert(1, 'default_profile_image', result.pop('default_profile_image'))\n","result.insert(2, 'description', result.pop('description'))\n","result.insert(3, 'favourite_count', result.pop('favourite_count'))\n","result.insert(4, 'public_metrics_followers_count', result.pop('public_metrics_followers_count'))\n","result.insert(5, 'friends_count', result.pop('friends_count'))\n","result.insert(6, 'geo_enabled', result.pop('geo_enabled'))\n","# result.insert(0, 'id', result.pop('id'))\n","result.insert(7, 'lang', result.pop('lang'))\n","result.insert(8, 'location', result.pop('location'))\n","result.insert(9, 'public_metrics_tweet_count', result.pop('public_metrics_tweet_count'))\n","result.insert(10, 'verified', result.pop('verified'))\n","result.insert(11, 'average_tweets_per_day', result.pop('average_tweets_per_day'))\n","result.insert(12, 'days_created', result.pop('days_created'))\n","\n","\n"],"metadata":{"id":"dQtMXqZA39Z1","executionInfo":{"status":"ok","timestamp":1670268414094,"user_tz":300,"elapsed":119,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":418,"outputs":[]},{"cell_type":"code","source":["# result.info()"],"metadata":{"id":"-M8UouvG2wm2","executionInfo":{"status":"ok","timestamp":1670268414096,"user_tz":300,"elapsed":110,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":419,"outputs":[]},{"cell_type":"code","source":["df_str.sample(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"czZg-xTfaqrH","executionInfo":{"status":"ok","timestamp":1670268414251,"user_tz":300,"elapsed":264,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"cf815297-c94a-45a7-fb57-0fe0e9b058cd"},"execution_count":420,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                created_at  default_profile_image  description  \\\n","11382  1259004248000000000                      0            7   \n","12358  1265266289000000000                      0           15   \n","\n","       favourites_count  followers_count  friends_count  geo_enabled  lang  \\\n","11382               118                2              0            0     1   \n","12358                 0           794105           1083            0     1   \n","\n","       location  statuses_count  verified  average_tweets_per_day  \\\n","11382         0              20         0                   0.005   \n","12358         0            3541         0                   0.920   \n","\n","       account_age_days  account_type  \n","11382              3921             1  \n","12358              3849             0  "],"text/html":["\n","  <div id=\"df-614323c5-8502-4013-bc60-a65abfbb1bd3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>created_at</th>\n","      <th>default_profile_image</th>\n","      <th>description</th>\n","      <th>favourites_count</th>\n","      <th>followers_count</th>\n","      <th>friends_count</th>\n","      <th>geo_enabled</th>\n","      <th>lang</th>\n","      <th>location</th>\n","      <th>statuses_count</th>\n","      <th>verified</th>\n","      <th>average_tweets_per_day</th>\n","      <th>account_age_days</th>\n","      <th>account_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>11382</th>\n","      <td>1259004248000000000</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>118</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>0.005</td>\n","      <td>3921</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12358</th>\n","      <td>1265266289000000000</td>\n","      <td>0</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>794105</td>\n","      <td>1083</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3541</td>\n","      <td>0</td>\n","      <td>0.920</td>\n","      <td>3849</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-614323c5-8502-4013-bc60-a65abfbb1bd3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-614323c5-8502-4013-bc60-a65abfbb1bd3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-614323c5-8502-4013-bc60-a65abfbb1bd3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":420}]},{"cell_type":"markdown","source":["COls needed:\n","<!-- 0    created_at              37438 non-null  int64   -->\n"," <!-- 1   default_profile_image   37438 non-null  int64   -->\n"," <!-- 2   description             37438 non-null  int64   -->\n"," 3   favourites_count        37438 non-null  int64  \n"," <!-- 4   followers_count         37438 non-null  int64  \n"," 5   friends_count           37438 non-null  int64   -->\n"," <!-- 6   geo_enabled             37438 non-null  int64   -->\n"," <!-- 7   id                      37438 non-null  int64  \n"," 8   lang                    37438 non-null  int64   -->\n"," <!-- 9   location                37438 non-null  int64   -->\n"," <!-- 10  statuses_count          37438 non-null  int64  (tweet count) -->\n"," <!-- 11  verified                37438 non-null  int64   -->\n"," <!-- 12  average_tweets_per_day  37438 non-null  float64 (math)\n"," 13  account_age_days     (calc from created at) -->"],"metadata":{"id":"bqmxZhYFxFFH"}},{"cell_type":"markdown","source":["Use twitter Api to get tweets and pull the information into a dataframe"],"metadata":{"id":"fS2tcfC-FsaR"}},{"cell_type":"markdown","source":["# Model Tweet info"],"metadata":{"id":"SPH7eSh17qLE"}},{"cell_type":"code","source":["result.rename(columns = {'days_created':'account_age_days', 'favourite_count':'favourites_count', 'public_metrics_followers_count': 'followers_count', 'public_metrics_tweet_count':'statuses_count'  }, inplace = True)"],"metadata":{"id":"H9th8T9B_JfZ","executionInfo":{"status":"ok","timestamp":1670268416767,"user_tz":300,"elapsed":342,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":421,"outputs":[]},{"cell_type":"code","source":["candidates=['geo_place_id']\n","result = result.drop([x for x in candidates if x in result.columns], inplace = True, axis=1)"],"metadata":{"id":"YHdUw7jdw9S6","executionInfo":{"status":"ok","timestamp":1670268618269,"user_tz":300,"elapsed":151,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":424,"outputs":[]},{"cell_type":"code","source":["\n"],"metadata":{"id":"ghMBUHWRtTOK","executionInfo":{"status":"ok","timestamp":1670268624524,"user_tz":300,"elapsed":126,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":424,"outputs":[]},{"cell_type":"code","source":["result.replace([np.inf, -np.inf], np.nan, inplace=True)\n","result.fillna(0, inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":181},"id":"RAoam4otsbAd","executionInfo":{"status":"error","timestamp":1670268669999,"user_tz":300,"elapsed":625,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"1a866bc0-c00d-4027-b52e-3ff11aae6d54"},"execution_count":426,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-426-6dbf3d5b66f4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minf\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnan\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfillna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'NoneType' object has no attribute 'replace'"]}]},{"cell_type":"code","source":["result.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":164},"id":"0SD_3SC3n9DB","executionInfo":{"status":"error","timestamp":1670268664677,"user_tz":300,"elapsed":1304,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}},"outputId":"1ca9a4ca-18d7-4ed7-c056-65809d5fb19d"},"execution_count":425,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-425-970bf06c7900>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minfo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'NoneType' object has no attribute 'info'"]}]},{"cell_type":"code","source":["result.sample()"],"metadata":{"id":"UdlS3l_1n7N3","executionInfo":{"status":"aborted","timestamp":1670268417883,"user_tz":300,"elapsed":102,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_guess = result.iloc[:]"],"metadata":{"id":"oVYVXote72ck","executionInfo":{"status":"aborted","timestamp":1670268417884,"user_tz":300,"elapsed":101,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"A8t-WBATpXSp","executionInfo":{"status":"aborted","timestamp":1670268417884,"user_tz":300,"elapsed":97,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"bNseSKkpovIm","executionInfo":{"status":"aborted","timestamp":1670268417884,"user_tz":300,"elapsed":97,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_guess = rf_clf.predict(X_guess)"],"metadata":{"id":"2V24soSzaYDF","executionInfo":{"status":"aborted","timestamp":1670268417891,"user_tz":300,"elapsed":104,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_guess"],"metadata":{"id":"yI-DS6sCABUe","executionInfo":{"status":"aborted","timestamp":1670268417894,"user_tz":300,"elapsed":106,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_guess[2]"],"metadata":{"id":"KHyRDAbcu4dX","executionInfo":{"status":"aborted","timestamp":1670268417894,"user_tz":300,"elapsed":106,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["human_count = 100\n","i =0\n","while( i < y_guess.size):\n","  # print(y_guess[i])\n","  human_count = (human_count - y_guess[i])\n","  i += 1\n","  \n","  \n","# human_count\n","\n","percentage_human = human_count/y_guess.size\n","\n","percentage_human"],"metadata":{"id":"W7HFi0B1CjIP","executionInfo":{"status":"aborted","timestamp":1670268417897,"user_tz":300,"elapsed":109,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","type_account = pd.DataFrame(columns=['type'])\n","for i in y_guess:\n","  type_account = type_account.append({'type': y_guess[i]}, ignore_index=True)\n","\n","result = pd.concat([result, type_account], axis=1)"],"metadata":{"id":"bHYmpO_dGjHf","executionInfo":{"status":"aborted","timestamp":1670268417898,"user_tz":300,"elapsed":109,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result.sample(5)"],"metadata":{"id":"wmc3sH2GHNmL","executionInfo":{"status":"aborted","timestamp":1670268417898,"user_tz":300,"elapsed":104,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.countplot(x='type', data=result, hue = 'verified')"],"metadata":{"id":"zDBpvVorKEKA","executionInfo":{"status":"aborted","timestamp":1670268417898,"user_tz":300,"elapsed":104,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Repeat Process for other tweets\n"],"metadata":{"id":"Iwnz3xrGLaBY"}},{"cell_type":"code","source":[],"metadata":{"id":"CHL0FJTvFwGW","executionInfo":{"status":"ok","timestamp":1670268365642,"user_tz":300,"elapsed":158,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":383,"outputs":[]},{"cell_type":"markdown","source":["# Final Calcs"],"metadata":{"id":"UZObYYy1F5yW"}},{"cell_type":"code","source":["# put into model to get predictions"],"metadata":{"id":"EN3KbQI8ekoh","executionInfo":{"status":"ok","timestamp":1670268365642,"user_tz":300,"elapsed":155,"user":{"displayName":"Lauren May","userId":"13996064536600254254"}}},"execution_count":384,"outputs":[]},{"cell_type":"markdown","source":["determine percentage bots vs humans"],"metadata":{"id":"o4sy5OsBF-6z"}}]}